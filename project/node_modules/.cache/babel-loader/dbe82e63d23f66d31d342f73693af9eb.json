{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Pizza 2/react-pizza-v2/src/pages/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport qs from 'qs';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Categories, Sort, PizzaBlock, Skeleton, Pagination } from '../components';\nimport { sortList } from '../components/Sort';\nimport { useAppDispatch } from '../redux/store';\nimport { selectFilter } from '../redux/filter/selectors';\nimport { selectPizzaData } from '../redux/pizza/selectors';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/filter/slice';\nimport { fetchPizzas } from '../redux/pizza/asyncActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const isMounted = React.useRef(false);\n  const {\n    items,\n    status\n  } = useSelector(selectPizzaData);\n  const {\n    categoryId,\n    sort,\n    currentPage,\n    searchValue\n  } = useSelector(selectFilter);\n  const onChangeCategory = React.useCallback(idx => {\n    dispatch(setCategoryId(idx));\n  }, []);\n\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const getPizzas = async () => {\n    const sortBy = sort.sortProperty.replace('-', '');\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const category = categoryId > 0 ? String(categoryId) : '';\n    const search = searchValue;\n    dispatch(fetchPizzas({\n      sortBy,\n      order,\n      category,\n      search,\n      currentPage: String(currentPage)\n    }));\n    window.scrollTo(0, 0);\n  }; // Если изменили параметры и был первый рендер\n\n\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const params = {\n        categoryId: categoryId > 0 ? categoryId : null,\n        sortProperty: sort.sortProperty,\n        currentPage\n      };\n      const queryString = qs.stringify(params, {\n        skipNulls: true\n      });\n      navigate(`/?${queryString}`);\n    }\n\n    const params = qs.parse(window.location.search.substring(1));\n    const sortObj = sortList.find(obj => obj.sortProperty === params.sortBy);\n    dispatch(setFilters({\n      searchValue: params.search,\n      categoryId: Number(params.category),\n      currentPage: Number(params.currentPage),\n      sort: sortObj || sortList[0]\n    }));\n    getPizzas();\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]); // Парсим параметры при первом рендере\n  // React.useEffect(() => {\n  //   if (window.location.search) {\n  //     const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n  //     const sort = sortList.find((obj) => obj.sortProperty === params.sortBy);\n  //     dispatch(\n  //       setFilters({\n  //         searchValue: params.search,\n  //         categoryId: Number(params.category),\n  //         currentPage: Number(params.currentPage),\n  //         sort: sort || sortList[0],\n  //       }),\n  //     );\n  //   }\n  //   isMounted.current = true;\n  // }, []);\n\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, { ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 42\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 57\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        value: sort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), status === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__error-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u043E\\u0448\\u0438\\u0431\\u043A\\u0430 \\uD83D\\uDE15\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041A \\u0441\\u043E\\u0436\\u0430\\u043B\\u0435\\u043D\\u0438\\u044E, \\u043D\\u0435 \\u0443\\u0434\\u0430\\u043B\\u043E\\u0441\\u044C \\u043F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u043F\\u0438\\u0442\\u0441\\u044B. \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u043F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C \\u043F\\u043E\\u043F\\u044B\\u0442\\u043A\\u0443 \\u043F\\u043E\\u0437\\u0436\\u0435.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: status === 'loading' ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"QpeFiatcGXjpdG/6qpc7fYZIgAw=\", false, function () {\n  return [useNavigate, useAppDispatch, useSelector, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/mac/Desktop/Pizza 2/react-pizza-v2/src/pages/Home.tsx"],"names":["React","qs","useSelector","useNavigate","Categories","Sort","PizzaBlock","Skeleton","Pagination","sortList","useAppDispatch","selectFilter","selectPizzaData","setCategoryId","setCurrentPage","setFilters","fetchPizzas","Home","navigate","dispatch","isMounted","useRef","items","status","categoryId","sort","currentPage","searchValue","onChangeCategory","useCallback","idx","onChangePage","page","getPizzas","sortBy","sortProperty","replace","order","includes","category","String","search","window","scrollTo","useEffect","current","params","queryString","stringify","skipNulls","parse","location","substring","sortObj","find","obj","Number","pizzas","map","id","skeletons","Array","_","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport qs from 'qs';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Categories, Sort, PizzaBlock, Skeleton, Pagination } from '../components';\n\nimport { sortList } from '../components/Sort';\n\nimport { useAppDispatch } from '../redux/store';\nimport { selectFilter } from '../redux/filter/selectors';\nimport { selectPizzaData } from '../redux/pizza/selectors';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/filter/slice';\nimport { fetchPizzas } from '../redux/pizza/asyncActions';\nimport { SearchPizzaParams } from '../redux/pizza/types';\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const isMounted = React.useRef(false);\n\n  const { items, status } = useSelector(selectPizzaData);\n  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter);\n\n  const onChangeCategory = React.useCallback((idx: number) => {\n    dispatch(setCategoryId(idx));\n  }, []);\n\n  const onChangePage = (page: number) => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const getPizzas = async () => {\n    const sortBy = sort.sortProperty.replace('-', '');\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const category = categoryId > 0 ? String(categoryId) : '';\n    const search = searchValue;\n\n    dispatch(\n      fetchPizzas({\n        sortBy,\n        order,\n        category,\n        search,\n        currentPage: String(currentPage),\n      }),\n    );\n\n    window.scrollTo(0, 0);\n  };\n\n  // Если изменили параметры и был первый рендер\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const params = {\n        categoryId: categoryId > 0 ? categoryId : null,\n        sortProperty: sort.sortProperty,\n        currentPage,\n      };\n\n      const queryString = qs.stringify(params, { skipNulls: true });\n\n      navigate(`/?${queryString}`);\n    }\n\n    const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n    const sortObj = sortList.find((obj) => obj.sortProperty === params.sortBy);\n    dispatch(\n      setFilters({\n        searchValue: params.search,\n        categoryId: Number(params.category),\n        currentPage: Number(params.currentPage),\n        sort: sortObj || sortList[0],\n      }),\n    );\n\n    getPizzas();\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Парсим параметры при первом рендере\n  // React.useEffect(() => {\n  //   if (window.location.search) {\n  //     const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n  //     const sort = sortList.find((obj) => obj.sortProperty === params.sortBy);\n  //     dispatch(\n  //       setFilters({\n  //         searchValue: params.search,\n  //         categoryId: Number(params.category),\n  //         currentPage: Number(params.currentPage),\n  //         sort: sort || sortList[0],\n  //       }),\n  //     );\n  //   }\n  //   isMounted.current = true;\n  // }, []);\n\n  const pizzas = items.map((obj: any) => <PizzaBlock key={obj.id} {...obj} />);\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories value={categoryId} onChangeCategory={onChangeCategory} />\n        <Sort value={sort} />\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      {status === 'error' ? (\n        <div className=\"content__error-info\">\n          <h2>Произошла ошибка 😕</h2>\n          <p>К сожалению, не удалось получить питсы. Попробуйте повторить попытку позже.</p>\n        </div>\n      ) : (\n        <div className=\"content__items\">{status === 'loading' ? skeletons : pizzas}</div>\n      )}\n\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}