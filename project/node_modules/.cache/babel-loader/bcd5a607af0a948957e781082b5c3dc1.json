{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';import{fetchPizzas}from'./asyncActions';import{Status}from'./types';var initialState={items:[],status:Status.LOADING// loading | success | error\n};var pizzaSlice=createSlice({name:'pizza',initialState:initialState,reducers:{setItems:function setItems(state,action){state.items=action.payload;}},extraReducers:function extraReducers(builder){builder.addCase(fetchPizzas.pending,function(state,action){state.status=Status.LOADING;state.items=[];});builder.addCase(fetchPizzas.fulfilled,function(state,action){state.items=action.payload;state.status=Status.SUCCESS;});builder.addCase(fetchPizzas.rejected,function(state,action){state.status=Status.ERROR;state.items=[];});}});var setItems=pizzaSlice.actions.setItems;export{setItems};export default pizzaSlice.reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Pizza 2/react-pizza-v2/src/redux/pizza/slice.ts"],"names":["createSlice","fetchPizzas","Status","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAASC,WAAT,KAA4B,gBAA5B,CACA,OAAiCC,MAAjC,KAA+C,SAA/C,CAEA,GAAMC,CAAAA,YAA6B,CAAG,CACpCC,KAAK,CAAE,EAD6B,CAEpCC,MAAM,CAAEH,MAAM,CAACI,OAAS;AAFY,CAAtC,CAKA,GAAMC,CAAAA,UAAU,CAAGP,WAAW,CAAC,CAC7BQ,IAAI,CAAE,OADuB,CAE7BL,YAAY,CAAZA,YAF6B,CAG7BM,QAAQ,CAAE,CACRC,QADQ,mBACCC,KADD,CACQC,MADR,CACwC,CAC9CD,KAAK,CAACP,KAAN,CAAcQ,MAAM,CAACC,OAArB,CACD,CAHO,CAHmB,CAQ7BC,aAAa,CAAE,uBAACC,OAAD,CAAa,CAC1BA,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACgB,OAA5B,CAAqC,SAACN,KAAD,CAAQC,MAAR,CAAmB,CACtDD,KAAK,CAACN,MAAN,CAAeH,MAAM,CAACI,OAAtB,CACAK,KAAK,CAACP,KAAN,CAAc,EAAd,CACD,CAHD,EAKAW,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACiB,SAA5B,CAAuC,SAACP,KAAD,CAAQC,MAAR,CAAmB,CACxDD,KAAK,CAACP,KAAN,CAAcQ,MAAM,CAACC,OAArB,CACAF,KAAK,CAACN,MAAN,CAAeH,MAAM,CAACiB,OAAtB,CACD,CAHD,EAKAJ,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACmB,QAA5B,CAAsC,SAACT,KAAD,CAAQC,MAAR,CAAmB,CACvDD,KAAK,CAACN,MAAN,CAAeH,MAAM,CAACmB,KAAtB,CACAV,KAAK,CAACP,KAAN,CAAc,EAAd,CACD,CAHD,EAID,CAvB4B,CAAD,CAA9B,CA0BO,GAAQM,CAAAA,QAAR,CAAqBH,UAAU,CAACe,OAAhC,CAAQZ,QAAR,C,iBAEP,cAAeH,CAAAA,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchPizzas } from './asyncActions';\nimport { Pizza, PizzaSliceState, Status } from './types';\n\nconst initialState: PizzaSliceState = {\n  items: [],\n  status: Status.LOADING, // loading | success | error\n};\n\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action: PayloadAction<Pizza[]>) {\n      state.items = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  },\n});\n\nexport const { setItems } = pizzaSlice.actions;\n\nexport default pizzaSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}