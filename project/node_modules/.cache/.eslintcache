[{"/Users/mac/Desktop/GitHub/Diploma-project/project/src/index.tsx":"1","/Users/mac/Desktop/GitHub/Diploma-project/project/src/App.tsx":"2","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/store.ts":"3","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/NotFound.tsx":"4","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/Home.tsx":"5","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/FullPizza.tsx":"6","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/Cart.tsx":"7","/Users/mac/Desktop/GitHub/Diploma-project/project/src/layouts/MainLayout.tsx":"8","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/slice.ts":"9","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/cart/slice.ts":"10","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/slice.ts":"11","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/selectors.ts":"12","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/selectors.ts":"13","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/cart/selectors.ts":"14","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/asyncActions.ts":"15","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/types.ts":"16","/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/types.ts":"17","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Sort.tsx":"18","/Users/mac/Desktop/GitHub/Diploma-project/project/src/utils/calcTotalPrice.ts":"19","/Users/mac/Desktop/GitHub/Diploma-project/project/src/utils/getCartFromLS.ts":"20","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/index.ts":"21","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Header.tsx":"22","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/CartItem.tsx":"23","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Categories.tsx":"24","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/CartEmpty.tsx":"25","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/PizzaBlock/Skeleton.tsx":"26","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/PizzaBlock/index.tsx":"27","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Search/index.tsx":"28","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Pagination/index.tsx":"29","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/NotFoundBlock/index.tsx":"30","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Maps.jsx":"31","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Form.jsx":"32"},{"size":441,"mtime":1653551658369,"results":"33","hashOfConfig":"34"},{"size":1432,"mtime":1653553013022,"results":"35","hashOfConfig":"34"},{"size":461,"mtime":1653551658373,"results":"36","hashOfConfig":"34"},{"size":153,"mtime":1653551658371,"results":"37","hashOfConfig":"34"},{"size":4120,"mtime":1653555561094,"results":"38","hashOfConfig":"34"},{"size":1131,"mtime":1653555448636,"results":"39","hashOfConfig":"34"},{"size":5554,"mtime":1653587014551,"results":"40","hashOfConfig":"34"},{"size":610,"mtime":1653588504089,"results":"41","hashOfConfig":"34"},{"size":1489,"mtime":1653551658372,"results":"42","hashOfConfig":"34"},{"size":1376,"mtime":1653551658371,"results":"43","hashOfConfig":"34"},{"size":996,"mtime":1653551658373,"results":"44","hashOfConfig":"34"},{"size":105,"mtime":1653551658373,"results":"45","hashOfConfig":"34"},{"size":170,"mtime":1653551658372,"results":"46","hashOfConfig":"34"},{"size":221,"mtime":1653551658371,"results":"47","hashOfConfig":"34"},{"size":759,"mtime":1653555196437,"results":"48","hashOfConfig":"34"},{"size":377,"mtime":1653551658372,"results":"49","hashOfConfig":"34"},{"size":448,"mtime":1653551658373,"results":"50","hashOfConfig":"34"},{"size":2813,"mtime":1653555806079,"results":"51","hashOfConfig":"34"},{"size":176,"mtime":1653551658376,"results":"52","hashOfConfig":"34"},{"size":340,"mtime":1653551658376,"results":"53","hashOfConfig":"34"},{"size":295,"mtime":1653551658369,"results":"54","hashOfConfig":"34"},{"size":3051,"mtime":1653556520827,"results":"55","hashOfConfig":"34"},{"size":4404,"mtime":1653555515611,"results":"56","hashOfConfig":"34"},{"size":631,"mtime":1653555658184,"results":"57","hashOfConfig":"34"},{"size":653,"mtime":1653555883059,"results":"58","hashOfConfig":"34"},{"size":621,"mtime":1653551658367,"results":"59","hashOfConfig":"34"},{"size":2967,"mtime":1653555488198,"results":"60","hashOfConfig":"34"},{"size":2222,"mtime":1653555681848,"results":"61","hashOfConfig":"34"},{"size":556,"mtime":1653551658367,"results":"62","hashOfConfig":"34"},{"size":476,"mtime":1653551658366,"results":"63","hashOfConfig":"34"},{"size":4598,"mtime":1653588418050,"results":"64","hashOfConfig":"34"},{"size":2152,"mtime":1653587514580,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"4x6u40",{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"69"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},"/Users/mac/Desktop/GitHub/Diploma-project/project/src/index.tsx",[],[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/App.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/store.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/NotFound.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/Home.tsx",["168","169","170","171","172","173","174","175"],[],"import React from 'react';\nimport qs from 'qs';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Categories, Sort, PizzaBlock, Skeleton, Pagination } from '../components';\n\nimport { sortList } from '../components/Sort';\n\nimport { useAppDispatch } from '../redux/store';\nimport { selectFilter } from '../redux/filter/selectors';\nimport { selectPizzaData } from '../redux/pizza/selectors';\nimport { setCategoryId, setCurrentPage, setFilters } from '../redux/filter/slice';\nimport { fetchPizzas } from '../redux/pizza/asyncActions';\nimport { SearchPizzaParams } from '../redux/pizza/types';\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const isMounted = React.useRef(false);\n\n  const { items, status } = useSelector(selectPizzaData);\n  const { categoryId, sort, currentPage, searchValue } = useSelector(selectFilter);\n\n  const onChangeCategory = React.useCallback((idx: number) => {\n    dispatch(setCategoryId(idx));\n  }, []);\n\n  const onChangePage = (page: number) => {\n    dispatch(setCurrentPage(page));\n  };\n\n  const getPizzas = async () => {\n    const sortBy = sort.sortProperty.replace('-', '');\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const category = categoryId > 0 ? String(categoryId) : '';\n    const search = searchValue;\n\n    dispatch(\n      fetchPizzas({\n        sortBy,\n        order,\n        category,\n        search,\n        currentPage: String(currentPage),\n      }),\n    );\n\n    window.scrollTo(0, 0);\n  };\n\n  // Если изменили параметры и был первый рендер\n  React.useEffect(() => {\n    // if (isMounted.current) {\n    //   const params = {\n    //     categoryId: categoryId > 0 ? categoryId : null,\n    //     sortProperty: sort.sortProperty,\n    //     currentPage,\n    //   };\n\n    //   const queryString = qs.stringify(params, { skipNulls: true });\n\n    //   navigate(`/?${queryString}`);\n    // }\n\n    // const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n    // const sortObj = sortList.find((obj) => obj.sortProperty === params.sortBy);\n    // dispatch(\n    //   setFilters({\n    //     searchValue: params.search,\n    //     categoryId: Number(params.category),\n    //     currentPage: Number(params.currentPage),\n    //     sort: sortObj || sortList[0],\n    //   }),\n    // );\n\n    getPizzas();\n    // isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Парсим параметры при первом рендере\n  // React.useEffect(() => {\n  //   if (window.location.search) {\n  //     const params = qs.parse(window.location.search.substring(1)) as unknown as SearchPizzaParams;\n  //     const sort = sortList.find((obj) => obj.sortProperty === params.sortBy);\n  //     dispatch(\n  //       setFilters({\n  //         searchValue: params.search,\n  //         categoryId: Number(params.category),\n  //         currentPage: Number(params.currentPage),\n  //         sort: sort || sortList[0],\n  //       }),\n  //     );\n  //   }\n  //   isMounted.current = true;\n  // }, []);\n\n  const pizzas = items.map((obj: any) => <PizzaBlock key={obj.id} {...obj} />);\n  const skeletons = [...new Array(6)].map((_, index) => <Skeleton key={index} />);\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories value={categoryId} onChangeCategory={onChangeCategory} />\n        <Sort value={sort} />\n      </div>\n      <h2 className=\"content__title\">Усі піци</h2>\n      {status === 'error' ? (\n        <div className=\"content__error-info\">\n          <h2>Виникла помилка 😕</h2>\n          <p>На жаль, не вдалося отримати пітси. Спробуйте повторити спробу пізніше.</p>\n        </div>\n      ) : (\n        <div className=\"content__items\">{status === 'loading' ? skeletons : pizzas}</div>\n      )}\n\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/FullPizza.tsx",["176","177"],[],"import React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nconst FullPizza: React.FC = () => {\n  const [pizza, setPizza] = React.useState<{\n    imageUrl: string;\n    title: string;\n    price: number;\n  }>();\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  React.useEffect(() => {\n    async function fetchPizza() {\n      try {\n        const { data } = await axios.get('https://628e58d0a339dfef87aca389.mockapi.io/item/' + id);\n        setPizza(data);\n      } catch (error) {\n        alert('Помилка при отриманні піци!');\n        navigate('/');\n      }\n    }\n\n    fetchPizza();\n  }, []);\n\n  if (!pizza) {\n    return <>Завантаження...</>;\n  }\n\n  return (\n    <div className=\"container\">\n      <img src={pizza.imageUrl} />\n      <h2>{pizza.title}</h2>\n      <h4>{pizza.price} грн</h4>\n      <Link to=\"/\">\n        <button className=\"button button--outline button--add\">\n          <span>Назад</span>\n        </button>\n      </Link>\n    </div>\n  );\n};\n\nexport default FullPizza;\n","/Users/mac/Desktop/GitHub/Diploma-project/project/src/pages/Cart.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/layouts/MainLayout.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/slice.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/cart/slice.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/slice.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/selectors.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/selectors.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/cart/selectors.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/asyncActions.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/filter/types.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/redux/pizza/types.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Sort.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/utils/calcTotalPrice.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/utils/getCartFromLS.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/index.ts",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Header.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/CartItem.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Categories.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/CartEmpty.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/PizzaBlock/Skeleton.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/PizzaBlock/index.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Search/index.tsx",["178"],[],"import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport debounce from 'lodash.debounce';\n\nimport styles from './Search.module.scss';\nimport { setSearchValue } from '../../redux/filter/slice';\n\nexport const Search: React.FC = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = React.useState<string>('');\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const onClickClear = () => {\n    dispatch(setSearchValue(''));\n    setValue('');\n    inputRef.current?.focus();\n  };\n\n  const updateSearchValue = React.useCallback(\n    debounce((str: string) => {\n      dispatch(setSearchValue(str));\n    }, 150),\n    [],\n  );\n\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    updateSearchValue(event.target.value);\n  };\n\n  return (\n    <div className={styles.root}>\n      <svg\n        className={styles.icon}\n        enableBackground=\"new 0 0 32 32\"\n        id=\"EditableLine\"\n        version=\"1.1\"\n        viewBox=\"0 0 32 32\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <circle\n          cx=\"14\"\n          cy=\"14\"\n          fill=\"none\"\n          id=\"XMLID_42_\"\n          r=\"9\"\n          stroke=\"#000000\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth=\"2\"\n        />\n        <line\n          fill=\"none\"\n          id=\"XMLID_44_\"\n          stroke=\"#000000\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth=\"2\"\n          x1=\"27\"\n          x2=\"20.366\"\n          y1=\"27\"\n          y2=\"20.366\"\n        />\n      </svg>\n      <input\n        ref={inputRef}\n        value={value}\n        onChange={onChangeInput}\n        className={styles.input}\n        placeholder=\"Пошук...\"\n      />\n      {value && (\n        <svg\n          onClick={onClickClear}\n          className={styles.clearIcon}\n          viewBox=\"0 0 20 20\"\n          xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z\" />\n        </svg>\n      )}\n    </div>\n  );\n};\n","/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Pagination/index.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/NotFoundBlock/index.tsx",[],[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Maps.jsx",["179"],[],"import React, { useState} from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\nconst MapContainer = () => {\n  const [selected, setSelected] = useState({});\n  const [currentPosition, setCurrentPosition] = useState({});\n  const [direction, setDirection] = useState(null);\n  const [distance, setDistance] = useState(0);\n  const [time, setTime] = useState(0);\n  const [center, setCenter] = useState({\n    lat: 48.494183918654095,\n    lng: 35.06661888513518,\n  });\n  const success = (position) => {\n    const currentPosition = {\n      lat: position.coords.latitude,\n      lng: position.coords.longitude,\n    };\n    setCurrentPosition(currentPosition);\n    setCenter(currentPosition);\n  };\n\n  const getLocation = () => {\n    navigator.geolocation.getCurrentPosition(success);\n  };\n\n  const onSelect = (item) => {\n    setSelected(item);\n  };\n\n  const mapStyles = {\n    height: \"100vh\",\n    width: \"100%\",\n    height: \"800px\",\n    boxShadow: \"1px 0px 15px 0px #000000bd\",\n    borderRadius: \"19px\",\n  };\n \n  const locations = [\n    {\n      name: \"Володимирська вулиця, 1\",\n      location: {\n        lat: 48.53638711690556,\n        lng: 35.086944469926024,\n      },\n    },\n    {\n      name: \"Байкальська, 22\",\n      location: {\n        lat: 48.520273635766664,\n        lng: 35.07544777817048,\n      },\n    },\n    {\n      name: \"Європейська, 30\",\n      location: {\n        lat: 48.47008328427697,\n        lng: 35.049526007176645,\n      },\n    },\n    {\n      name: \"Січеславська Набережна, 37\",\n      location: {\n        lat: 48.468226909227,\n        lng: 35.05779604275472,\n      },\n    },\n    {\n      name: \"Слобожанський, 1а\",\n      location: {\n        lat: 48.488357007500845,\n        lng: 35.06292853537112,\n      },\n    },\n    {\n      name: \"Берегова, 54\",\n      location: {\n        lat: 48.50115760960298,\n        lng: 35.01188440419679,\n      },\n    },\n    {\n      name: \"Січеславська Набережна, 5\",\n      location: {\n        lat: 48.477554683717216,\n        lng: 35.03645374991173,\n      },\n    },\n  ];\n\n  const getDirection = () => {\n    const DirectionsService = new window.google.maps.DirectionsService();\n    DirectionsService.route(\n      {\n        origin: currentPosition,\n        destination: selected.location,\n        travelMode: window.google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirection(result);\n          let directionsData = result.routes[0].legs[0];\n          setDistance(directionsData.distance.text)\n          setTime(directionsData.duration.text)\n          console.log(directionsData.distance.text);\n          console.log(directionsData.duration.text);\n          document.getElementById(\"delivery\").innerHTML=parseFloat(directionsData.distance.text)*3 + \" грн\";\n        } else { \n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  };\n\n  return (\n    <div className=\"map_info\">\n      <div className=\"map_distance\">\n        <button className=\"button geo\" onClick={getLocation}>Моя геолокація</button>\n        <button className=\"button route\" onClick={getDirection}>Прокласти маршрут</button>\n        <p id=\"distance\">Відстань {distance}</p>\n        <p id =\"time\">Час у дорозі {time}</p>\n      </div>\n      \n      <LoadScript googleMapsApiKey=\"\">\n        <GoogleMap mapContainerStyle={mapStyles} zoom={13} center={center}>\n          if (currentPosition== null) {}else\n          {\n            <Marker\n              icon={{ url: require(\"./icon.png\") }}\n              position={currentPosition}\n            />\n          }\n          <DirectionsRenderer directions={direction} />\n          {locations.map((item) => {\n            return (\n              <Marker\n                key={item.name}\n                position={item.location}\n                icon={{ url: require(\"./custom-marker.png\") }}\n                onClick={() => onSelect(item)}\n              />\n            );\n          })}\n          {selected.location && (\n            <InfoWindow\n              position={selected.location}\n              clickable={true}\n              onCloseClick={() => setSelected({})}\n            >\n              <p>{selected.name} <br />Час роботи: 8:00 - 22:00 \n  <br />ПН-ВС</p>\n\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default MapContainer;\n\n\n\n",[],"/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/Form.jsx",[],[],{"ruleId":"180","severity":1,"message":"181","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":10},{"ruleId":"180","severity":1,"message":"184","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":18},{"ruleId":"180","severity":1,"message":"185","line":13,"column":41,"nodeType":"182","messageId":"183","endLine":13,"endColumn":51},{"ruleId":"180","severity":1,"message":"186","line":15,"column":10,"nodeType":"182","messageId":"183","endLine":15,"endColumn":27},{"ruleId":"180","severity":1,"message":"187","line":18,"column":9,"nodeType":"182","messageId":"183","endLine":18,"endColumn":17},{"ruleId":"180","severity":1,"message":"188","line":20,"column":9,"nodeType":"182","messageId":"183","endLine":20,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":27,"column":6,"nodeType":"191","endLine":27,"endColumn":8,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":79,"column":6,"nodeType":"191","endLine":79,"endColumn":63,"suggestions":"194"},{"ruleId":"189","severity":1,"message":"195","line":28,"column":6,"nodeType":"191","endLine":28,"endColumn":8,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":36,"column":7,"nodeType":"199","endLine":36,"endColumn":35},{"ruleId":"189","severity":1,"message":"200","line":19,"column":29,"nodeType":"201","endLine":19,"endColumn":46},{"ruleId":"202","severity":1,"message":"203","line":39,"column":5,"nodeType":"204","messageId":"205","endLine":39,"endColumn":11},"@typescript-eslint/no-unused-vars","'qs' is defined but never used.","Identifier","unusedVar","'sortList' is defined but never used.","'setFilters' is defined but never used.","'SearchPizzaParams' is defined but never used.","'navigate' is assigned a value but never used.","'isMounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["206"],"React Hook React.useEffect has a missing dependency: 'getPizzas'. Either include it or remove the dependency array.",["207"],"React Hook React.useEffect has missing dependencies: 'id' and 'navigate'. Either include them or remove the dependency array.",["208"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","MemberExpression","no-dupe-keys","Duplicate key 'height'.","ObjectExpression","unexpected",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"213","fix":"214"},"Update the dependencies array to be: [dispatch]",{"range":"215","text":"216"},"Update the dependencies array to be: [categoryId, sort.sortProperty, searchValue, currentPage, getPizzas]",{"range":"217","text":"218"},"Update the dependencies array to be: [id, navigate]",{"range":"219","text":"220"},[1031,1033],"[dispatch]",[2444,2501],"[categoryId, sort.sortProperty, searchValue, currentPage, getPizzas]",[697,699],"[id, navigate]"]