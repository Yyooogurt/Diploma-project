{"ast":null,"code":"import _objectSpread from\"/Users/mac/Desktop/Pizza 2/react-pizza-v2/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice}from'@reduxjs/toolkit';import{calcTotalPrice}from'../../utils/calcTotalPrice';import{getCartFromLS}from'../../utils/getCartFromLS';var initialState=getCartFromLS();var cartSlice=createSlice({name:'cart',initialState:initialState,reducers:{addItem:function addItem(state,action){var findItem=state.items.find(function(obj){return obj.id===action.payload.id;});if(findItem){findItem.count++;}else{state.items.push(_objectSpread(_objectSpread({},action.payload),{},{count:1}));}state.totalPrice=calcTotalPrice(state.items);},minusItem:function minusItem(state,action){var findItem=state.items.find(function(obj){return obj.id===action.payload;});if(findItem){findItem.count--;}},removeItem:function removeItem(state,action){state.items=state.items.filter(function(obj){return obj.id!==action.payload;});},clearItems:function clearItems(state){state.items=[];state.totalPrice=0;}}});var _cartSlice$actions=cartSlice.actions,addItem=_cartSlice$actions.addItem,removeItem=_cartSlice$actions.removeItem,minusItem=_cartSlice$actions.minusItem,clearItems=_cartSlice$actions.clearItems;export{addItem,removeItem,minusItem,clearItems};export default cartSlice.reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Pizza 2/react-pizza-v2/src/redux/cart/slice.ts"],"names":["createSlice","calcTotalPrice","getCartFromLS","initialState","cartSlice","name","reducers","addItem","state","action","findItem","items","find","obj","id","payload","count","push","totalPrice","minusItem","removeItem","filter","clearItems","actions","reducer"],"mappings":"8HAAA,OAASA,WAAT,KAA2C,kBAA3C,CACA,OAASC,cAAT,KAA+B,4BAA/B,CACA,OAASC,aAAT,KAA8B,2BAA9B,CAGA,GAAMC,CAAAA,YAA4B,CAAGD,aAAa,EAAlD,CAEA,GAAME,CAAAA,SAAS,CAAGJ,WAAW,CAAC,CAC5BK,IAAI,CAAE,MADsB,CAE5BF,YAAY,CAAZA,YAF4B,CAG5BG,QAAQ,CAAE,CACRC,OADQ,kBACAC,KADA,CACOC,MADP,CACwC,CAC9C,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,EAAJ,GAAWL,MAAM,CAACM,OAAP,CAAeD,EAAnC,EAAjB,CAAjB,CAEA,GAAIJ,QAAJ,CAAc,CACZA,QAAQ,CAACM,KAAT,GACD,CAFD,IAEO,CACLR,KAAK,CAACG,KAAN,CAAYM,IAAZ,gCACKR,MAAM,CAACM,OADZ,MAEEC,KAAK,CAAE,CAFT,IAID,CAEDR,KAAK,CAACU,UAAN,CAAmBjB,cAAc,CAACO,KAAK,CAACG,KAAP,CAAjC,CACD,CAdO,CAeRQ,SAfQ,oBAeEX,KAfF,CAeSC,MAfT,CAewC,CAC9C,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiB,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,EAAJ,GAAWL,MAAM,CAACM,OAA3B,EAAjB,CAAjB,CAEA,GAAIL,QAAJ,CAAc,CACZA,QAAQ,CAACM,KAAT,GACD,CACF,CArBO,CAsBRI,UAtBQ,qBAsBGZ,KAtBH,CAsBUC,MAtBV,CAsByC,CAC/CD,KAAK,CAACG,KAAN,CAAcH,KAAK,CAACG,KAAN,CAAYU,MAAZ,CAAmB,SAACR,GAAD,QAASA,CAAAA,GAAG,CAACC,EAAJ,GAAWL,MAAM,CAACM,OAA3B,EAAnB,CAAd,CACD,CAxBO,CAyBRO,UAzBQ,qBAyBGd,KAzBH,CAyBU,CAChBA,KAAK,CAACG,KAAN,CAAc,EAAd,CACAH,KAAK,CAACU,UAAN,CAAmB,CAAnB,CACD,CA5BO,CAHkB,CAAD,CAA7B,CAmCO,uBAAuDd,SAAS,CAACmB,OAAjE,CAAQhB,OAAR,oBAAQA,OAAR,CAAiBa,UAAjB,oBAAiBA,UAAjB,CAA6BD,SAA7B,oBAA6BA,SAA7B,CAAwCG,UAAxC,oBAAwCA,UAAxC,C,gDAEP,cAAelB,CAAAA,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { calcTotalPrice } from '../../utils/calcTotalPrice';\nimport { getCartFromLS } from '../../utils/getCartFromLS';\nimport { CartItem, CartSliceState } from './types';\n\nconst initialState: CartSliceState = getCartFromLS();\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addItem(state, action: PayloadAction<CartItem>) {\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action: PayloadAction<string>) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action: PayloadAction<string>) {\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n    clearItems(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const { addItem, removeItem, minusItem, clearItems } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}