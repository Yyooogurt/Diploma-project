{"ast":null,"code":"// Initialize and add the map\nvar map; // check for Geolocation support\n\nif (navigator.geolocation) {\n  console.log('Geolocation is supported!');\n} else {\n  console.log('Geolocation is not supported for this Browser/OS.');\n}\n\nlet button = document.getElementById(\"get-location\");\nlet latText = document.getElementById(\"latitude\");\nlet longText = document.getElementById(\"longitude\");\n\nfunction initMap() {\n  // The map\n  const center = {\n    lat: 46.48280227225143,\n    lng: 30.726510796889656\n  };\n  const options = {\n    zoom: 10,\n    scaleControl: true,\n    center: center\n  };\n  map = new google.maps.Map(document.getElementById('map'), options); // Locations of landmarks\n\n  const contentString1 = \" <div> \" + \"<p>СушиБосс на Канатная 61 </p>\" + \"</div>\";\n  const infowindow1 = new google.maps.InfoWindow({\n    content: contentString1\n  });\n  const contentString2 = \" <div> \" + \"<p>СушиБосс на Вильямса 81/1а </p>\" + \"</div>\";\n  const infowindow2 = new google.maps.InfoWindow({\n    content: contentString2\n  });\n  const contentString3 = \" <div> \" + \"<p>СушиБосс на Пр. Небесной сотни 4/11 </p>\" + \"</div>\";\n  const infowindow3 = new google.maps.InfoWindow({\n    content: contentString3\n  });\n  const contentString4 = \" <div> \" + \"<p>СушиБосс на Ул. Николаевская дорога, 299 </p>\" + \"</div>\";\n  const infowindow4 = new google.maps.InfoWindow({\n    content: contentString4\n  });\n  const contentString5 = \" <div> \" + \"<p>СушиБосс на ЖК 7 небо, ул. Торговая 17 </p>\" + \"</div>\";\n  const infowindow5 = new google.maps.InfoWindow({\n    content: contentString5\n  });\n  const contentString6 = \" <div> \" + \"<p>СушиБосс на Черноморск, пр. Мира 18М </p>\" + \"</div>\";\n  const infowindow6 = new google.maps.InfoWindow({\n    content: contentString6\n  });\n  const contentString7 = \" <div> \" + \"<p>СушиСэт на Белгород, ул. Московская 16 </p>\" + \"</div>\";\n  const infowindow7 = new google.maps.InfoWindow({\n    content: contentString7\n  });\n  const contentString8 = \" <div> \" + \"<p>СушиБосс на Измаил, пр. Мира, 19Б </p>\" + \"</div>\";\n  const infowindow8 = new google.maps.InfoWindow({\n    content: contentString8\n  });\n  const contentString9 = \" <div> \" + \"<p>СушиСэт на Варненская 11/1 </p>\" + \"</div>\";\n  const infowindow9 = new google.maps.InfoWindow({\n    content: contentString9\n  });\n  const contentString10 = \" <div> \" + \"<p>СушиСэт на Филатова 21 </p>\" + \"</div>\";\n  const infowindow10 = new google.maps.InfoWindow({\n    content: contentString10\n  });\n  const contentString11 = \" <div> \" + \"<p>СушиСэт на Академическая 10 </p>\" + \"</div>\";\n  const infowindow11 = new google.maps.InfoWindow({\n    content: contentString11\n  });\n  const contentString12 = \" <div> \" + \"<p>СушиСэт на Крымская 71 </p>\" + \"</div>\";\n  const infowindow12 = new google.maps.InfoWindow({\n    content: contentString12\n  });\n  const contentString13 = \" <div> \" + \"<p>СушиСэт на Королёва 42/44 </p>\" + \"</div>\";\n  const infowindow13 = new google.maps.InfoWindow({\n    content: contentString13\n  });\n  const contentString14 = \" <div> \" + \"<p>СушиСэт на Преображенская 27 </p>\" + \"</div>\";\n  const infowindow14 = new google.maps.InfoWindow({\n    content: contentString14\n  });\n  const contentString15 = \" <div> \" + \"<p>СушиСэт на Екатерининская 72 </p>\" + \"</div>\";\n  const infowindow15 = new google.maps.InfoWindow({\n    content: contentString15\n  });\n  const contentString16 = \" <div> \" + \"<p>СушиБосс на пр.Центральный 71А </p>\" + \"</div>\";\n  const infowindow16 = new google.maps.InfoWindow({\n    content: contentString16\n  });\n  const contentString17 = \" <div> \" + \"<p>СушиБосс на Педагогическая 58 </p>\" + \"</div>\";\n  const infowindow17 = new google.maps.InfoWindow({\n    content: contentString17\n  }); //SushiBoss\n\n  const canatnaya = {\n    lat: 46.471714599109525,\n    lng: 30.747179232956377\n  };\n  const vilyam = {\n    lat: 46.390333865851694,\n    lng: 30.718850634008824\n  };\n  const nebesna = {\n    lat: 46.40080837103359,\n    lng: 30.7080217874675\n  };\n  const mikolaiv = {\n    lat: 46.55427863770318,\n    lng: 30.76261929734942\n  };\n  const torgova = {\n    lat: 46.45329,\n    lng: 30.64197\n  };\n  const chernomorsc = {\n    lat: 46.30420950974765,\n    lng: 30.654399268503138\n  };\n  const moscovscaya = {\n    lat: 46.192973331032796,\n    lng: 30.34043425869424\n  };\n  const mira = {\n    lat: 45.357450023497755,\n    lng: 28.82332925127509\n  }; //Markers\n\n  var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';\n  var mk1 = new google.maps.Marker({\n    position: canatnaya,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk2 = new google.maps.Marker({\n    position: vilyam,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk3 = new google.maps.Marker({\n    position: nebesna,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk4 = new google.maps.Marker({\n    position: mikolaiv,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk5 = new google.maps.Marker({\n    position: torgova,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk6 = new google.maps.Marker({\n    position: chernomorsc,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk7 = new google.maps.Marker({\n    position: moscovscaya,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk8 = new google.maps.Marker({\n    position: mira,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  }); //SushiSet\n\n  const vernenskay = {\n    lat: 46.42601364511811,\n    lng: 30.71744888462948\n  };\n  const filatova = {\n    lat: 46.43533729552938,\n    lng: 30.719486255001996\n  };\n  const academichna = {\n    lat: 46.441515307445286,\n    lng: 30.74919601358268\n  };\n  const posmitnogo = {\n    lat: 46.42746504921432,\n    lng: 30.75458700482343\n  };\n  const crumskay = {\n    lat: 46.579500842545514,\n    lng: 30.790055339667475\n  };\n  const koroleva = {\n    lat: 46.4058425990526,\n    lng: 30.72111680724049\n  };\n  const probragenskay = {\n    lat: 46.480964375842746,\n    lng: 30.731865604242355\n  };\n  const ekaterininskay = {\n    lat: 46.47277643629396,\n    lng: 30.736577483819794\n  };\n  const centralnay = {\n    lat: 46.966470179505606,\n    lng: 31.98863594420194\n  }; //Markers\n\n  var mk9 = new google.maps.Marker({\n    position: vernenskay,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk10 = new google.maps.Marker({\n    position: filatova,\n    map: map\n  }); //no\n\n  var mk11 = new google.maps.Marker({\n    position: academichna,\n    map: map\n  }); //no\n\n  var mk12 = new google.maps.Marker({\n    position: crumskay,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk13 = new google.maps.Marker({\n    position: koroleva,\n    map: map\n  }); //no\n\n  var mk14 = new google.maps.Marker({\n    position: probragenskay,\n    map: map\n  }); //no\n\n  var mk15 = new google.maps.Marker({\n    position: ekaterininskay,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk16 = new google.maps.Marker({\n    position: centralnay,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  });\n  var mk17 = new google.maps.Marker({\n    position: posmitnogo,\n    map: map,\n    icon: iconBase + 'parking_lot_maps.png'\n  }); // addListener\n\n  mk1.addListener(\"click\", () => {\n    infowindow1.open(map, mk1);\n  });\n  mk2.addListener(\"click\", () => {\n    infowindow2.open(map, mk2);\n  });\n  mk3.addListener(\"click\", () => {\n    infowindow3.open(map, mk3);\n  });\n  mk4.addListener(\"click\", () => {\n    infowindow4.open(map, mk4);\n  });\n  mk5.addListener(\"click\", () => {\n    infowindow5.open(map, mk5);\n  });\n  mk6.addListener(\"click\", () => {\n    infowindow6.open(map, mk6);\n  });\n  mk7.addListener(\"click\", () => {\n    infowindow7.open(map, mk7);\n  });\n  mk8.addListener(\"click\", () => {\n    infowindow8.open(map, mk8);\n  });\n  mk9.addListener(\"click\", () => {\n    infowindow9.open(map, mk9);\n  });\n  mk10.addListener(\"click\", () => {\n    infowindow10.open(map, mk10);\n  });\n  mk11.addListener(\"click\", () => {\n    infowindow11.open(map, mk11);\n  });\n  mk12.addListener(\"click\", () => {\n    infowindow12.open(map, mk12);\n  });\n  mk13.addListener(\"click\", () => {\n    infowindow13.open(map, mk13);\n  });\n  mk14.addListener(\"click\", () => {\n    infowindow14.open(map, mk14);\n  });\n  mk15.addListener(\"click\", () => {\n    infowindow15.open(map, mk15);\n  });\n  mk16.addListener(\"click\", () => {\n    infowindow16.open(map, mk16);\n  });\n  mk17.addListener(\"click\", () => {\n    infowindow17.open(map, mk17);\n  });\n  const canatnayaCoords = [{\n    lat: 46.491872,\n    lng: 30.7384629\n  }, {\n    lat: 46.4876764,\n    lng: 30.7396645\n  }, {\n    lat: 46.4771564,\n    lng: 30.7388062\n  }, {\n    lat: 46.4687922,\n    lng: 30.7377977\n  }, {\n    lat: 46.4683412,\n    lng: 30.7392659\n  }, {\n    lat: 46.4627694,\n    lng: 30.7389655\n  }, {\n    lat: 46.4612462,\n    lng: 30.7638846\n  }, {\n    lat: 46.4791365,\n    lng: 30.7662076\n  }, {\n    lat: 46.491872,\n    lng: 30.7384629\n  }];\n  const vilyamCoords = [{\n    lat: 46.3941166,\n    lng: 30.752839\n  }, {\n    lat: 46.39006,\n    lng: 30.7064931\n  }, {\n    lat: 46.3894195,\n    lng: 30.6698381\n  }, {\n    lat: 46.3900772,\n    lng: 30.6584016\n  }, {\n    lat: 46.3905042,\n    lng: 30.6421782\n  }, {\n    lat: 46.3504096,\n    lng: 30.6467272\n  }, {\n    lat: 46.3464989,\n    lng: 30.6645824\n  }, {\n    lat: 46.3275356,\n    lng: 30.6697323\n  }, {\n    lat: 46.3270615,\n    lng: 30.6810623\n  }, {\n    lat: 46.3768264,\n    lng: 30.7476684\n  }, {\n    lat: 46.3941166,\n    lng: 30.752839\n  }];\n  const nebesnaCoords = [{\n    lat: 46.4050762,\n    lng: 30.7098564\n  }, {\n    lat: 46.4073548,\n    lng: 30.7051357\n  }, {\n    lat: 46.4060823,\n    lng: 30.6898579\n  }, {\n    lat: 46.3894195,\n    lng: 30.6698381\n  }, {\n    lat: 46.3902186,\n    lng: 30.7058012\n  }, {\n    lat: 46.4050762,\n    lng: 30.7098564\n  }];\n  const mikolaivCoords = [{\n    lat: 46.489548,\n    lng: 30.744374\n  }, {\n    lat: 46.5112305,\n    lng: 30.7381086\n  }, {\n    lat: 46.524224,\n    lng: 30.7384519\n  }, {\n    lat: 46.5372144,\n    lng: 30.7477214\n  }, {\n    lat: 46.5480767,\n    lng: 30.7611107\n  }, {\n    lat: 46.5582287,\n    lng: 30.7957855\n  }, {\n    lat: 46.5557831,\n    lng: 30.8115434\n  }, {\n    lat: 46.5479061,\n    lng: 30.8200892\n  }, {\n    lat: 46.5536013,\n    lng: 30.8509502\n  }, {\n    lat: 46.5638935,\n    lng: 30.8759615\n  }, {\n    lat: 46.5709737,\n    lng: 30.8153131\n  }, {\n    lat: 46.5769919,\n    lng: 30.7966463\n  }, {\n    lat: 46.580503,\n    lng: 30.7887725\n  }, {\n    lat: 46.585079,\n    lng: 30.7776873\n  }, {\n    lat: 46.5853926,\n    lng: 30.775249\n  }, {\n    lat: 46.5851346,\n    lng: 30.7707155\n  }, {\n    lat: 46.5845151,\n    lng: 30.7689014\n  }, {\n    lat: 46.5838364,\n    lng: 30.76801\n  }, {\n    lat: 46.5814028,\n    lng: 30.7660458\n  }, {\n    lat: 46.573832,\n    lng: 30.7598759\n  }, {\n    lat: 46.572751,\n    lng: 30.7592855\n  }, {\n    lat: 46.5719462,\n    lng: 30.759478\n  }, {\n    lat: 46.573571,\n    lng: 30.6955374\n  }, {\n    lat: 46.5612975,\n    lng: 30.7051503\n  }, {\n    lat: 46.5466008,\n    lng: 30.6761411\n  }, {\n    lat: 46.5334948,\n    lng: 30.6455851\n  }, {\n    lat: 46.522039,\n    lng: 30.6632658\n  }, {\n    lat: 46.5285689,\n    lng: 30.7143209\n  }, {\n    lat: 46.5204113,\n    lng: 30.7122844\n  }, {\n    lat: 46.5164916,\n    lng: 30.7109736\n  }, {\n    lat: 46.5129623,\n    lng: 30.7090471\n  }, {\n    lat: 46.5056517,\n    lng: 30.7095251\n  }, {\n    lat: 46.5027239,\n    lng: 30.7151065\n  }, {\n    lat: 46.4990644,\n    lng: 30.7219815\n  }, {\n    lat: 46.496521,\n    lng: 30.7294846\n  }, {\n    lat: 46.4925359,\n    lng: 30.7379244\n  }, {\n    lat: 46.489548,\n    lng: 30.744374\n  }];\n  const torgovaCoords = [{\n    lat: 46.3900772,\n    lng: 30.6584016\n  }, {\n    lat: 46.413167,\n    lng: 30.6531542\n  }, {\n    lat: 46.4177826,\n    lng: 30.6461161\n  }, {\n    lat: 46.4345846,\n    lng: 30.6512659\n  }, {\n    lat: 46.450731,\n    lng: 30.652725\n  }, {\n    lat: 46.4623203,\n    lng: 30.6518667\n  }, {\n    lat: 46.4710341,\n    lng: 30.6499902\n  }, {\n    lat: 46.4753787,\n    lng: 30.6432954\n  }, {\n    lat: 46.4756152,\n    lng: 30.6420937\n  }, {\n    lat: 46.5174479,\n    lng: 30.6204644\n  }, {\n    lat: 46.5242987,\n    lng: 30.6544534\n  }, {\n    lat: 46.5469713,\n    lng: 30.6166878\n  }, {\n    lat: 46.4987807,\n    lng: 30.5270806\n  }, {\n    lat: 46.3922085,\n    lng: 30.5681077\n  }, {\n    lat: 46.3900772,\n    lng: 30.6584016\n  }];\n  const chernomorscCoords = [{\n    lat: 46.3125927,\n    lng: 30.6767468\n  }, {\n    lat: 46.3348794,\n    lng: 30.6546025\n  }, {\n    lat: 46.338435,\n    lng: 30.6480794\n  }, {\n    lat: 46.3361832,\n    lng: 30.6341748\n  }, {\n    lat: 46.3341683,\n    lng: 30.6225019\n  }, {\n    lat: 46.3283603,\n    lng: 30.6123738\n  }, {\n    lat: 46.3217219,\n    lng: 30.6032758\n  }, {\n    lat: 46.3127113,\n    lng: 30.5977826\n  }, {\n    lat: 46.3047665,\n    lng: 30.5977826\n  }, {\n    lat: 46.292432,\n    lng: 30.6034474\n  }, {\n    lat: 46.2817557,\n    lng: 30.6106572\n  }, {\n    lat: 46.2787897,\n    lng: 30.6264501\n  }, {\n    lat: 46.279027,\n    lng: 30.6444745\n  }, {\n    lat: 46.2846029,\n    lng: 30.6549459\n  }, {\n    lat: 46.2948042,\n    lng: 30.662499\n  }, {\n    lat: 46.3125927,\n    lng: 30.6767468\n  }];\n  const moscovscayaCoords = [{\n    lat: 46.2029393,\n    lng: 30.3540336\n  }, {\n    lat: 46.2048402,\n    lng: 30.3128349\n  }, {\n    lat: 46.1977115,\n    lng: 30.2915489\n  }, {\n    lat: 46.1720405,\n    lng: 30.2966987\n  }, {\n    lat: 46.1518281,\n    lng: 30.3231346\n  }, {\n    lat: 46.1577737,\n    lng: 30.3787529\n  }, {\n    lat: 46.1758444,\n    lng: 30.3818428\n  }, {\n    lat: 46.2029393,\n    lng: 30.3540336\n  }];\n  const miraCoords = [{\n    lat: 45.3566809,\n    lng: 28.8752144\n  }, {\n    lat: 45.3682597,\n    lng: 28.8738411\n  }, {\n    lat: 45.3750129,\n    lng: 28.8710945\n  }, {\n    lat: 45.3827299,\n    lng: 28.8649147\n  }, {\n    lat: 45.388758,\n    lng: 28.8511818\n  }, {\n    lat: 45.3926157,\n    lng: 28.8377922\n  }, {\n    lat: 45.3940622,\n    lng: 28.8185661\n  }, {\n    lat: 45.3904458,\n    lng: 28.8017433\n  }, {\n    lat: 45.3863468,\n    lng: 28.7883537\n  }, {\n    lat: 45.381283,\n    lng: 28.7804573\n  }, {\n    lat: 45.3742894,\n    lng: 28.7756508\n  }, {\n    lat: 45.3665712,\n    lng: 28.7725609\n  }, {\n    lat: 45.3564396,\n    lng: 28.7701576\n  }, {\n    lat: 45.3511318,\n    lng: 28.7739342\n  }, {\n    lat: 45.345341,\n    lng: 28.7814873\n  }, {\n    lat: 45.3395495,\n    lng: 28.7917869\n  }, {\n    lat: 45.3383429,\n    lng: 28.8010567\n  }, {\n    lat: 45.3395495,\n    lng: 28.8106697\n  }, {\n    lat: 45.332068,\n    lng: 28.8298958\n  }, {\n    lat: 45.328689,\n    lng: 28.8415687\n  }, {\n    lat: 45.3262752,\n    lng: 28.854615\n  }, {\n    lat: 45.3335161,\n    lng: 28.8666313\n  }, {\n    lat: 45.3434106,\n    lng: 28.874871\n  }, {\n    lat: 45.3516144,\n    lng: 28.8762443\n  }, {\n    lat: 45.3566809,\n    lng: 28.8752144\n  }];\n  const vernenskayCoords = [{\n    lat: 46.4374252,\n    lng: 30.7302856\n  }, {\n    lat: 46.4379284,\n    lng: 30.7253016\n  }, {\n    lat: 46.4288483,\n    lng: 30.7120837\n  }, {\n    lat: 46.4229616,\n    lng: 30.7034577\n  }, {\n    lat: 46.4233758,\n    lng: 30.7066334\n  }, {\n    lat: 46.416453,\n    lng: 30.7221688\n  }, {\n    lat: 46.4189086,\n    lng: 30.7253016\n  }, {\n    lat: 46.4180506,\n    lng: 30.7265461\n  }, {\n    lat: 46.4206584,\n    lng: 30.7441728\n  }, {\n    lat: 46.4240561,\n    lng: 30.7412877\n  }, {\n    lat: 46.4276059,\n    lng: 30.7383049\n  }, {\n    lat: 46.4330833,\n    lng: 30.7335344\n  }, {\n    lat: 46.4369447,\n    lng: 30.7301865\n  }, {\n    lat: 46.4374252,\n    lng: 30.7302856\n  }];\n  const filatovaCoords = [{\n    lat: 46.423109,\n    lng: 30.7038284\n  }, {\n    lat: 46.4379284,\n    lng: 30.7253016\n  }, {\n    lat: 46.4374252,\n    lng: 30.7302856\n  }, {\n    lat: 46.4408628,\n    lng: 30.7307414\n  }, {\n    lat: 46.4425669,\n    lng: 30.7309479\n  }, {\n    lat: 46.4443005,\n    lng: 30.7310686\n  }, {\n    lat: 46.4477493,\n    lng: 30.7317862\n  }, {\n    lat: 46.4512573,\n    lng: 30.7322464\n  }, {\n    lat: 46.4516121,\n    lng: 30.7284699\n  }, {\n    lat: 46.4526541,\n    lng: 30.7283973\n  }, {\n    lat: 46.4538959,\n    lng: 30.7287406\n  }, {\n    lat: 46.4551377,\n    lng: 30.7289122\n  }, {\n    lat: 46.4552559,\n    lng: 30.7248353\n  }, {\n    lat: 46.4542507,\n    lng: 30.7093\n  }, {\n    lat: 46.4544872,\n    lng: 30.6917906\n  }, {\n    lat: 46.4577393,\n    lng: 30.6851816\n  }, {\n    lat: 46.4607548,\n    lng: 30.6841517\n  }, {\n    lat: 46.4662531,\n    lng: 30.6747961\n  }, {\n    lat: 46.4697409,\n    lng: 30.6649256\n  }, {\n    lat: 46.4715143,\n    lng: 30.6657839\n  }, {\n    lat: 46.4752678,\n    lng: 30.6436826\n  }, {\n    lat: 46.4706041,\n    lng: 30.6513732\n  }, {\n    lat: 46.4613291,\n    lng: 30.6531424\n  }, {\n    lat: 46.4507027,\n    lng: 30.6538536\n  }, {\n    lat: 46.4506435,\n    lng: 30.6552697\n  }, {\n    lat: 46.4511166,\n    lng: 30.6727791\n  }, {\n    lat: 46.4441383,\n    lng: 30.6756973\n  }, {\n    lat: 46.4415359,\n    lng: 30.6765557\n  }, {\n    lat: 46.4411811,\n    lng: 30.6878853\n  }, {\n    lat: 46.4411219,\n    lng: 30.6934214\n  }, {\n    lat: 46.4347338,\n    lng: 30.6966829\n  }, {\n    lat: 46.4303563,\n    lng: 30.690589\n  }, {\n    lat: 46.423109,\n    lng: 30.7038284\n  }];\n  const academichnaCoords = [{\n    lat: 46.4612462,\n    lng: 30.7638846\n  }, {\n    lat: 46.4614593,\n    lng: 30.761627\n  }, {\n    lat: 46.4617083,\n    lng: 30.7556528\n  }, {\n    lat: 46.4620288,\n    lng: 30.7500563\n  }, {\n    lat: 46.4621378,\n    lng: 30.7468456\n  }, {\n    lat: 46.462799,\n    lng: 30.7384934\n  }, {\n    lat: 46.4599979,\n    lng: 30.7379032\n  }, {\n    lat: 46.4603859,\n    lng: 30.7310958\n  }, {\n    lat: 46.4594574,\n    lng: 30.7301207\n  }, {\n    lat: 46.458529,\n    lng: 30.7293603\n  }, {\n    lat: 46.4561398,\n    lng: 30.729127\n  }, {\n    lat: 46.4541515,\n    lng: 30.7287086\n  }, {\n    lat: 46.4516121,\n    lng: 30.7284699\n  }, {\n    lat: 46.4512573,\n    lng: 30.7322464\n  }, {\n    lat: 46.4369447,\n    lng: 30.7301865\n  }, {\n    lat: 46.4290622,\n    lng: 30.7370397\n  }, {\n    lat: 46.4315137,\n    lng: 30.7412749\n  }, {\n    lat: 46.4345869,\n    lng: 30.7474737\n  }, {\n    lat: 46.4362913,\n    lng: 30.7616695\n  }, {\n    lat: 46.4361171,\n    lng: 30.7640732\n  }, {\n    lat: 46.4361167,\n    lng: 30.7673406\n  }, {\n    lat: 46.4412034,\n    lng: 30.7719004\n  }, {\n    lat: 46.4469994,\n    lng: 30.7715571\n  }, {\n    lat: 46.4512573,\n    lng: 30.7694971\n  }, {\n    lat: 46.4556331,\n    lng: 30.7679522\n  }, {\n    lat: 46.4596539,\n    lng: 30.7650339\n  }, {\n    lat: 46.4612462,\n    lng: 30.7638846\n  }];\n  const crumskayCoords = [{\n    lat: 46.6064447,\n    lng: 30.7746494\n  }, {\n    lat: 46.5816401,\n    lng: 30.7607897\n  }, {\n    lat: 46.5767826,\n    lng: 30.7596513\n  }, {\n    lat: 46.5720061,\n    lng: 30.7578692\n  }, {\n    lat: 46.5719462,\n    lng: 30.759478\n  }, {\n    lat: 46.572751,\n    lng: 30.7592855\n  }, {\n    lat: 46.573832,\n    lng: 30.7598759\n  }, {\n    lat: 46.5814028,\n    lng: 30.7660458\n  }, {\n    lat: 46.5838364,\n    lng: 30.76801\n  }, {\n    lat: 46.5845151,\n    lng: 30.7689014\n  }, {\n    lat: 46.5851346,\n    lng: 30.7707155\n  }, {\n    lat: 46.5853926,\n    lng: 30.775249\n  }, {\n    lat: 46.585079,\n    lng: 30.7776873\n  }, {\n    lat: 46.5769919,\n    lng: 30.7966463\n  }, {\n    lat: 46.5709737,\n    lng: 30.8153131\n  }, {\n    lat: 46.5638935,\n    lng: 30.8759615\n  }, {\n    lat: 46.5660097,\n    lng: 30.8829387\n  }, {\n    lat: 46.5708483,\n    lng: 30.8746989\n  }, {\n    lat: 46.5757297,\n    lng: 30.8075605\n  }, {\n    lat: 46.5818653,\n    lng: 30.8119379\n  }, {\n    lat: 46.5850509,\n    lng: 30.8026682\n  }, {\n    lat: 46.5908315,\n    lng: 30.8188043\n  }, {\n    lat: 46.595432,\n    lng: 30.8159719\n  }, {\n    lat: 46.5999142,\n    lng: 30.8103929\n  }, {\n    lat: 46.6064447,\n    lng: 30.7746494\n  }];\n  const korolevaCoords = [{\n    lat: 46.419623,\n    lng: 30.7150761\n  }, {\n    lat: 46.4135864,\n    lng: 30.6949696\n  }, {\n    lat: 46.4058041,\n    lng: 30.7103118\n  }, {\n    lat: 46.39006,\n    lng: 30.7064931\n  }, {\n    lat: 46.3941166,\n    lng: 30.752839\n  }, {\n    lat: 46.4044021,\n    lng: 30.7583391\n  }, {\n    lat: 46.4201555,\n    lng: 30.7447736\n  }, {\n    lat: 46.4180506,\n    lng: 30.7265461\n  }, {\n    lat: 46.4189086,\n    lng: 30.7253016\n  }, {\n    lat: 46.416453,\n    lng: 30.7221688\n  }, {\n    lat: 46.419623,\n    lng: 30.7150761\n  }];\n  const probragenskayCoords = [{\n    lat: 46.4767943,\n    lng: 30.7384075\n  }, {\n    lat: 46.4835235,\n    lng: 30.7388039\n  }, {\n    lat: 46.4871582,\n    lng: 30.7391579\n  }, {\n    lat: 46.4895368,\n    lng: 30.7375326\n  }, {\n    lat: 46.4914648,\n    lng: 30.7373208\n  }, {\n    lat: 46.4925359,\n    lng: 30.7379244\n  }, {\n    lat: 46.4967607,\n    lng: 30.7288692\n  }, {\n    lat: 46.4981489,\n    lng: 30.724653\n  }, {\n    lat: 46.4986066,\n    lng: 30.7234031\n  }, {\n    lat: 46.4990644,\n    lng: 30.7219815\n  }, {\n    lat: 46.5056517,\n    lng: 30.7095251\n  }, {\n    lat: 46.5129623,\n    lng: 30.7090471\n  }, {\n    lat: 46.5164916,\n    lng: 30.7109736\n  }, {\n    lat: 46.5285689,\n    lng: 30.7143209\n  }, {\n    lat: 46.522039,\n    lng: 30.6632658\n  }, {\n    lat: 46.5242987,\n    lng: 30.6544534\n  }, {\n    lat: 46.5174479,\n    lng: 30.6204644\n  }, {\n    lat: 46.5029224,\n    lng: 30.6279529\n  }, {\n    lat: 46.4959506,\n    lng: 30.6316007\n  }, {\n    lat: 46.4934984,\n    lng: 30.6328025\n  }, {\n    lat: 46.491903,\n    lng: 30.6384243\n  }, {\n    lat: 46.491608,\n    lng: 30.6433137\n  }, {\n    lat: 46.4905278,\n    lng: 30.6598806\n  }, {\n    lat: 46.4856001,\n    lng: 30.6628313\n  }, {\n    lat: 46.4830734,\n    lng: 30.670793\n  }, {\n    lat: 46.4810941,\n    lng: 30.6801928\n  }, {\n    lat: 46.4755307,\n    lng: 30.6948803\n  }, {\n    lat: 46.4773557,\n    lng: 30.7079381\n  }, {\n    lat: 46.4773648,\n    lng: 30.7239978\n  }, {\n    lat: 46.477341,\n    lng: 30.73182\n  }, {\n    lat: 46.4767943,\n    lng: 30.7384075\n  }];\n  const ekaterininskayCoords = [{\n    lat: 46.4934984,\n    lng: 30.6328025\n  }, {\n    lat: 46.4756152,\n    lng: 30.6420937\n  }, {\n    lat: 46.4733937,\n    lng: 30.6542407\n  }, {\n    lat: 46.4724664,\n    lng: 30.6601471\n  }, {\n    lat: 46.4715143,\n    lng: 30.6657839\n  }, {\n    lat: 46.4697409,\n    lng: 30.6649256\n  }, {\n    lat: 46.4662531,\n    lng: 30.6747961\n  }, {\n    lat: 46.4607548,\n    lng: 30.6841517\n  }, {\n    lat: 46.4590391,\n    lng: 30.6845982\n  }, {\n    lat: 46.4577393,\n    lng: 30.6851816\n  }, {\n    lat: 46.4544872,\n    lng: 30.6917906\n  }, {\n    lat: 46.4542507,\n    lng: 30.7093\n  }, {\n    lat: 46.4552559,\n    lng: 30.7248353\n  }, {\n    lat: 46.4551377,\n    lng: 30.7289122\n  }, {\n    lat: 46.4561398,\n    lng: 30.729127\n  }, {\n    lat: 46.458529,\n    lng: 30.7293603\n  }, {\n    lat: 46.4603859,\n    lng: 30.7310958\n  }, {\n    lat: 46.4599979,\n    lng: 30.7379032\n  }, {\n    lat: 46.4649568,\n    lng: 30.7390084\n  }, {\n    lat: 46.4683412,\n    lng: 30.7392659\n  }, {\n    lat: 46.4687913,\n    lng: 30.737537\n  }, {\n    lat: 46.4701133,\n    lng: 30.7376535\n  }, {\n    lat: 46.4720479,\n    lng: 30.7380582\n  }, {\n    lat: 46.4746152,\n    lng: 30.7382892\n  }, {\n    lat: 46.4767943,\n    lng: 30.7384075\n  }, {\n    lat: 46.477341,\n    lng: 30.73182\n  }, {\n    lat: 46.4773557,\n    lng: 30.7079381\n  }, {\n    lat: 46.4755307,\n    lng: 30.6948803\n  }, {\n    lat: 46.4810941,\n    lng: 30.6801928\n  }, {\n    lat: 46.4830734,\n    lng: 30.670793\n  }, {\n    lat: 46.4856001,\n    lng: 30.6628313\n  }, {\n    lat: 46.4905278,\n    lng: 30.6598806\n  }, {\n    lat: 46.491903,\n    lng: 30.6384243\n  }, {\n    lat: 46.4934984,\n    lng: 30.6328025\n  }];\n  const centralnayCoords = [{\n    lat: 46.9556998,\n    lng: 31.9688887\n  }, {\n    lat: 46.9495999,\n    lng: 32.0128358\n  }, {\n    lat: 46.9336606,\n    lng: 32.025882\n  }, {\n    lat: 46.9458499,\n    lng: 32.047168\n  }, {\n    lat: 46.9706887,\n    lng: 32.0574677\n  }, {\n    lat: 46.9870854,\n    lng: 32.0403016\n  }, {\n    lat: 46.9987942,\n    lng: 32.0087159\n  }, {\n    lat: 46.9866237,\n    lng: 31.9786734\n  }, {\n    lat: 46.9811196,\n    lng: 31.9656271\n  }, {\n    lat: 46.9504269,\n    lng: 31.9304365\n  }, {\n    lat: 46.9432784,\n    lng: 31.9359297\n  }, {\n    lat: 46.9556998,\n    lng: 31.9688887\n  }];\n  const posmitnogoCoords = [{\n    lat: 46.4345869,\n    lng: 30.7474737\n  }, {\n    lat: 46.4315137,\n    lng: 30.7412749\n  }, {\n    lat: 46.4290622,\n    lng: 30.7370397\n  }, {\n    lat: 46.4044021,\n    lng: 30.7583391\n  }, {\n    lat: 46.4236911,\n    lng: 30.7690613\n  }, {\n    lat: 46.4363518,\n    lng: 30.7723209\n  }, {\n    lat: 46.4361167,\n    lng: 30.7673406\n  }, {\n    lat: 46.4361171,\n    lng: 30.7640732\n  }, {\n    lat: 46.4362913,\n    lng: 30.7616695\n  }, {\n    lat: 46.4345869,\n    lng: 30.7474737\n  }]; // Construct the polygon.\n\n  const canatnayaPolygon = new google.maps.Polygon({\n    paths: canatnayaCoords,\n    strokeColor: \"#5cde1d\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#5cde1d\",\n    fillOpacity: 0.35\n  });\n  const vilyamPolygon = new google.maps.Polygon({\n    paths: vilyamCoords,\n    strokeColor: \"#000000\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#000000\",\n    fillOpacity: 0.35\n  });\n  const nebesnaPolygon = new google.maps.Polygon({\n    paths: nebesnaCoords,\n    strokeColor: \"#14ad92\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#14ad92\",\n    fillOpacity: 0.35\n  });\n  const mikolaivPolygon = new google.maps.Polygon({\n    paths: mikolaivCoords,\n    strokeColor: \"#ffe306\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#ffe306\",\n    fillOpacity: 0.35\n  });\n  const torgovaPolygon = new google.maps.Polygon({\n    paths: torgovaCoords,\n    strokeColor: \"#5d1010\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#5d1010\",\n    fillOpacity: 0.35\n  });\n  const chernomorscPolygon = new google.maps.Polygon({\n    paths: chernomorscCoords,\n    strokeColor: \"#657511\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#657511\",\n    fillOpacity: 0.35\n  });\n  const moscovscayaPolygon = new google.maps.Polygon({\n    paths: moscovscayaCoords,\n    strokeColor: \"#0f3763\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#0f3763\",\n    fillOpacity: 0.35\n  });\n  const miraPolygon = new google.maps.Polygon({\n    paths: miraCoords,\n    strokeColor: \"#0ce7e8\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#0ce7e8\",\n    fillOpacity: 0.35\n  });\n  const vernenskayPolygon = new google.maps.Polygon({\n    paths: vernenskayCoords,\n    strokeColor: \"#d86e11\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#d86e11\",\n    fillOpacity: 0.35\n  });\n  const filatovaPolygon = new google.maps.Polygon({\n    paths: filatovaCoords,\n    strokeColor: \"#065818\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#0658\",\n    fillOpacity: 0.35\n  });\n  const academichnaPolygon = new google.maps.Polygon({\n    paths: academichnaCoords,\n    strokeColor: \"#FF0000\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#FF0000\",\n    fillOpacity: 0.35\n  });\n  const crumskayPolygon = new google.maps.Polygon({\n    paths: crumskayCoords,\n    strokeColor: \"#47109c\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#47109c\",\n    fillOpacity: 0.35\n  });\n  const korolevaPolygon = new google.maps.Polygon({\n    paths: korolevaCoords,\n    strokeColor: \"#10339c\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#10339c\",\n    fillOpacity: 0.35\n  });\n  const probragenskayPolygon = new google.maps.Polygon({\n    paths: probragenskayCoords,\n    strokeColor: \"#1a92ff\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#1a92ff\",\n    fillOpacity: 0.35\n  });\n  const ekaterininskayPolygon = new google.maps.Polygon({\n    paths: ekaterininskayCoords,\n    strokeColor: \"#ff1a81\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#ff1a81\",\n    fillOpacity: 0.35\n  });\n  const centralnayPolygon = new google.maps.Polygon({\n    paths: centralnayCoords,\n    strokeColor: \"#0f2863\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#0f2863\",\n    fillOpacity: 0.35\n  });\n  const posmitnogoPolygon = new google.maps.Polygon({\n    paths: posmitnogoCoords,\n    strokeColor: \"#0000008c\",\n    strokeOpacity: 0.8,\n    strokeWeight: 2,\n    fillColor: \"#0000008c\",\n    fillOpacity: 0.35\n  }); //Setmap\n\n  canatnayaPolygon.setMap(map);\n  vilyamPolygon.setMap(map);\n  nebesnaPolygon.setMap(map);\n  mikolaivPolygon.setMap(map);\n  torgovaPolygon.setMap(map);\n  chernomorscPolygon.setMap(map);\n  moscovscayaPolygon.setMap(map);\n  miraPolygon.setMap(map);\n  vernenskayPolygon.setMap(map);\n  filatovaPolygon.setMap(map);\n  academichnaPolygon.setMap(map);\n  crumskayPolygon.setMap(map);\n  korolevaPolygon.setMap(map);\n  probragenskayPolygon.setMap(map);\n  ekaterininskayPolygon.setMap(map);\n  centralnayPolygon.setMap(map);\n  posmitnogoPolygon.setMap(map); // Create the search box and link it to the UI element.\n\n  const input = document.getElementById(\"pac-input\");\n  const searchBox = new google.maps.places.SearchBox(input); // Bias the SearchBox results towards current map's viewport.\n\n  map.addListener(\"bounds_changed\", () => {\n    searchBox.setBounds(map.getBounds());\n  });\n  let markers = []; // Listen for the event fired when the user selects a prediction and retrieve\n  // more details for that place.\n\n  var markerLatLng;\n  var maLat;\n  searchBox.addListener(\"places_changed\", () => {\n    const places = searchBox.getPlaces();\n\n    if (places.length == 0) {\n      return;\n    } // Clear out the old markers.\n\n\n    markers.forEach(marker => {\n      marker.setMap(null);\n    });\n    markers = []; // For each place, get the icon, name and location.\n\n    const bounds = new google.maps.LatLngBounds();\n    places.forEach(place => {\n      if (!place.geometry || !place.geometry.location) {\n        console.log(\"Returned place contains no geometry\");\n        return;\n      }\n\n      maLat = place.geometry.location.lat();\n      maLng = place.geometry.location.lng();\n      markerLatLng = {\n        lat: place.geometry.location.lat(),\n        lng: place.geometry.location.lng()\n      };\n      const icon = {\n        url: place.icon,\n        size: new google.maps.Size(71, 71),\n        origin: new google.maps.Point(0, 0),\n        anchor: new google.maps.Point(17, 34),\n        scaledSize: new google.maps.Size(25, 25)\n      }; // Create a marker for each place.\n\n      markers.push(new google.maps.Marker({\n        map,\n        icon,\n        title: place.name,\n        position: place.geometry.location\n      })); // console.log(\"marker \"+markers.length+\" name=\"+place.name+\" coordinates=\"+place.geometry.location.toUrlValue(6)+\", latitude=\"+place.geometry.location.lat()+\", longitude=\"+place.geometry.location.lng());      \n      // console.log(markerLatLng);\n      // console.log(place.geometry.location.lat(),place.geometry.location.lng());\n\n      if (place.geometry.viewport) {\n        // Only geocodes have viewport.\n        bounds.union(place.geometry.viewport);\n      } else {\n        bounds.extend(place.geometry.location);\n      }\n    });\n    map.fitBounds(bounds);\n  }); //addlistener\n\n  let directionsService = new google.maps.DirectionsService();\n  let directionsRenderer = new google.maps.DirectionsRenderer();\n  directionsRenderer.setMap(map); // Existing map object displays directions\n  // Create route from existing points used for markers\n\n  document.getElementById(\"addRoute\").addEventListener(\"click\", function () {\n    console.log(markerLatLng); //Shop location\n\n    shopLatLng = document.getElementById(\"comboA\").value;\n    var jsonStr = shopLatLng.replace(/(\\w+:)|(\\w+ :)/g, function (matchedStr) {\n      return '\"' + matchedStr.substring(0, matchedStr.length - 1) + '\":';\n    });\n    shopLatLng = JSON.parse(jsonStr); //converts to a regular object\n\n    console.log(shopLatLng.lat);\n    const route = {\n      origin: shopLatLng,\n      destination: markerLatLng,\n      travelMode: 'DRIVING'\n    };\n    var R = 3958.8; // Radius of the Earth in miles\n\n    var rlat1 = shopLatLng.lat * (Math.PI / 180); // Convert degrees to radians\n\n    var rlat2 = maLat * (Math.PI / 180); // Convert degrees to radians\n\n    var difflat = rlat2 - rlat1; // Radian difference (latitudes)\n\n    var difflon = (maLng - shopLatLng.lng) * (Math.PI / 180); // Radian difference (longitudes)\n\n    var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat / 2) * Math.sin(difflat / 2) + Math.cos(rlat1) * Math.cos(rlat2) * Math.sin(difflon / 2) * Math.sin(difflon / 2)));\n    line = new google.maps.Polyline({\n      path: [shopLatLng, markerLatLng],\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 1.0,\n      strokeWeight: 2\n    });\n    console.log(shopLatLng.lat, shopLatLng.lng);\n    distance = d;\n    directionsService.route(route, function (response, status) {\n      // anonymous function to capture directions\n      if (status !== 'OK') {\n        window.alert('Directions request failed due to ' + status);\n        return;\n      } else {\n        directionsRenderer.setDirections(response); // Add route to the map\n\n        var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\n\n        if (!directionsData) {\n          window.alert('Directions request failed');\n          return;\n        } else {\n          // var numEl = parseInt(directionsData.distance.text.match(/\\d+/) * 1);\n          numEl = directionsData.distance.text;\n          document.getElementById(\"km\").innerHTML = 0 + \" км\";\n          document.getElementById(\"km\").innerHTML = numEl;\n        }\n      }\n    });\n  });\n  document.getElementById('addLine').addEventListener('click', addLine);\n\n  function addLine() {\n    line.setMap(map);\n    console.log(\"AddLine\");\n    let km = distance * 1.609344;\n    document.getElementById(\"line_km\").innerHTML = km.toFixed(2) + \" км\";\n  }\n\n  document.getElementById('removeLine').addEventListener('click', removeLine);\n\n  function removeLine() {\n    line.setMap(null);\n    document.getElementById(\"line_km\").innerHTML = 0 + \" км\";\n    console.log(\"RemoveLine\");\n  }\n\n  document.getElementById('addDelivery').addEventListener('click', addDelivery);\n\n  function addDelivery() {\n    let price = document.getElementById(\"input_price\").value;\n    numEl = numEl.replace(/[^0-9$.,]/g, '');\n    numEl = numEl.replace(/,/g, '.');\n    var num = parseFloat(numEl);\n    var priceInt = parseInt(price);\n    console.log(\"Цена \" + priceInt);\n    console.log(\"Км \" + num); //Условия доставки\n\n    switch (true) {\n      case num <= 4:\n        switch (true) {\n          case priceInt >= 150:\n            document.getElementById(\"line_delivery\").innerHTML = \"бесплатно\";\n            console.log(\"Бесплатно меньше 4 больше 150\");\n            break;\n\n          case priceInt < 150:\n            document.getElementById(\"line_delivery\").innerHTML = \"Бесплатная доставка от 150 грн или 30 грн\";\n            console.log(\"30 грн меньше 4 меньше 150\");\n        }\n\n        break;\n\n      case num > 4 && num <= 6:\n        switch (true) {\n          case priceInt >= 300:\n            document.getElementById(\"line_delivery\").innerHTML = \"бесплатно\";\n            console.log(\"Бесплатно 4-6 больше 300\");\n            break;\n\n          case priceInt > 0 && priceInt < 300:\n            document.getElementById(\"line_delivery\").innerHTML = \"Бесплатная доставка от 300 грн или 40 грн\";\n            console.log(\"40 грн  4-6 меньше 300\");\n        }\n\n        break;\n\n      case num > 6 && num <= 8:\n        switch (true) {\n          case priceInt >= 399:\n            document.getElementById(\"line_delivery\").innerHTML = \"бесплатно\";\n            console.log(\"Бесплатно 6-8 больше 399\");\n            break;\n\n          case priceInt > 0 && priceInt < 399:\n            document.getElementById(\"line_delivery\").innerHTML = \"Бесплатная доставка от 399 грн или 50 грн\";\n            console.log(\"50 грн  6-8 меньше 399\");\n        }\n\n        break;\n\n      case num > 8 && num <= 10:\n        switch (true) {\n          case priceInt >= 450:\n            document.getElementById(\"line_delivery\").innerHTML = \"бесплатно\";\n            console.log(\"Бесплатно 8-10 больше 450\");\n            break;\n\n          case priceInt > 0 && priceInt < 450:\n            document.getElementById(\"line_delivery\").innerHTML = \"Бесплатная доставка от 450 грн или 50 грн\";\n            console.log(\"60 грн  8-10 меньше 450\");\n        }\n\n        break;\n\n      case num > 10 && num <= 18:\n        switch (true) {\n          case priceInt >= 499:\n            document.getElementById(\"line_delivery\").innerHTML = \"бесплатно\";\n            console.log(\"100 грн\");\n            break;\n\n          case priceInt > 0 && priceInt < 499:\n            document.getElementById(\"line_delivery\").innerHTML = \"Бесплатная доставка от 499 грн или 100 грн\";\n            console.log(\"Минимальная сумма заказа 499 грн\");\n        }\n\n        break;\n\n      case num > 18 && num <= 200:\n        switch (true) {\n          case priceInt >= 1000:\n            document.getElementById(\"line_delivery\").innerHTML = \"100 грн\";\n            console.log(\"100 грн\");\n            break;\n\n          case priceInt > 0 && priceInt < 1000:\n            document.getElementById(\"line_delivery\").innerHTML = \"Мин. сумма заказа 1000 грн + 100 грн\";\n            console.log(\"Минимальная сумма заказа 1000 грн\");\n        }\n\n        break;\n\n      default:\n        document.getElementById(\"line_delivery\").innerHTML = \"Доставка не возможна\";\n        console.log(\"Доставка не возможна\");\n    }\n  }\n}\n\nexport { initMap }; //Определение местоположения пользователя \n//  button.addEventListener(\"click\", function() {\n//   navigator.geolocation.getCurrentPosition(function(position) {\n//     //User location\n//       let mylat = position.coords.latitude;\n//       let mylong = position.coords.longitude;\n//       var myLatLng = { lat: mylat, lng: mylong };\n//     //Shop location\n//       let shopLatLng =  document.getElementById(\"comboA\").value;\n//       var jsonStr = shopLatLng.replace(/(\\w+:)|(\\w+ :)/g, function(matchedStr) {\n//       return '\"' + matchedStr.substring(0, matchedStr.length - 1) + '\":';\n//     });\n//      shopLatLng = JSON.parse(jsonStr); //converts to a regular object\n//       console.log(typeof shopLatLng); // expected output: John\n//       const route = {\n//       origin: myLatLng,\n//       destination: shopLatLng,\n//       travelMode: 'DRIVING'\n//   }","map":{"version":3,"sources":["/Users/mac/Desktop/GitHub/Diploma-project/project/src/components/google.js"],"names":["map","navigator","geolocation","console","log","button","document","getElementById","latText","longText","initMap","center","lat","lng","options","zoom","scaleControl","google","maps","Map","contentString1","infowindow1","InfoWindow","content","contentString2","infowindow2","contentString3","infowindow3","contentString4","infowindow4","contentString5","infowindow5","contentString6","infowindow6","contentString7","infowindow7","contentString8","infowindow8","contentString9","infowindow9","contentString10","infowindow10","contentString11","infowindow11","contentString12","infowindow12","contentString13","infowindow13","contentString14","infowindow14","contentString15","infowindow15","contentString16","infowindow16","contentString17","infowindow17","canatnaya","vilyam","nebesna","mikolaiv","torgova","chernomorsc","moscovscaya","mira","iconBase","mk1","Marker","position","icon","mk2","mk3","mk4","mk5","mk6","mk7","mk8","vernenskay","filatova","academichna","posmitnogo","crumskay","koroleva","probragenskay","ekaterininskay","centralnay","mk9","mk10","mk11","mk12","mk13","mk14","mk15","mk16","mk17","addListener","open","canatnayaCoords","vilyamCoords","nebesnaCoords","mikolaivCoords","torgovaCoords","chernomorscCoords","moscovscayaCoords","miraCoords","vernenskayCoords","filatovaCoords","academichnaCoords","crumskayCoords","korolevaCoords","probragenskayCoords","ekaterininskayCoords","centralnayCoords","posmitnogoCoords","canatnayaPolygon","Polygon","paths","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","vilyamPolygon","nebesnaPolygon","mikolaivPolygon","torgovaPolygon","chernomorscPolygon","moscovscayaPolygon","miraPolygon","vernenskayPolygon","filatovaPolygon","academichnaPolygon","crumskayPolygon","korolevaPolygon","probragenskayPolygon","ekaterininskayPolygon","centralnayPolygon","posmitnogoPolygon","setMap","input","searchBox","places","SearchBox","setBounds","getBounds","markers","markerLatLng","maLat","getPlaces","length","forEach","marker","bounds","LatLngBounds","place","geometry","location","maLng","url","size","Size","origin","Point","anchor","scaledSize","push","title","name","viewport","union","extend","fitBounds","directionsService","DirectionsService","directionsRenderer","DirectionsRenderer","addEventListener","shopLatLng","value","jsonStr","replace","matchedStr","substring","JSON","parse","route","destination","travelMode","R","rlat1","Math","PI","rlat2","difflat","difflon","d","asin","sqrt","sin","cos","line","Polyline","path","distance","response","status","window","alert","setDirections","directionsData","routes","legs","numEl","text","innerHTML","addLine","km","toFixed","removeLine","addDelivery","price","num","parseFloat","priceInt","parseInt"],"mappings":"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","sourcesContent":["// Initialize and add the map\nvar map;\n// check for Geolocation support\nif (navigator.geolocation) {\n  console.log('Geolocation is supported!');\n}\nelse {\n  console.log('Geolocation is not supported for this Browser/OS.');\n}\nlet button = document.getElementById(\"get-location\");\nlet latText = document.getElementById(\"latitude\");\nlet longText = document.getElementById(\"longitude\");\n\nfunction initMap() {\n  // The map\n  const center = {lat: 46.48280227225143, lng: 30.726510796889656};\n  const options = {zoom: 10, scaleControl: true, center: center};\n  map = new google.maps.Map(\n      document.getElementById('map'), options);\n  // Locations of landmarks\nconst contentString1 =\" <div> \"+\"<p>СушиБосс на Канатная 61 </p>\"+\"</div>\";\nconst infowindow1 = new google.maps.InfoWindow({content: contentString1,});\nconst contentString2 =\" <div> \"+\"<p>СушиБосс на Вильямса 81/1а </p>\"+\"</div>\";\nconst infowindow2 = new google.maps.InfoWindow({content: contentString2,});\nconst contentString3 =\" <div> \"+\"<p>СушиБосс на Пр. Небесной сотни 4/11 </p>\"+\"</div>\";\nconst infowindow3 = new google.maps.InfoWindow({content: contentString3,});\nconst contentString4 =\" <div> \"+\"<p>СушиБосс на Ул. Николаевская дорога, 299 </p>\"+\"</div>\";\nconst infowindow4 = new google.maps.InfoWindow({content: contentString4,});\nconst contentString5 =\" <div> \"+\"<p>СушиБосс на ЖК 7 небо, ул. Торговая 17 </p>\"+\"</div>\";\nconst infowindow5 = new google.maps.InfoWindow({content: contentString5,});\nconst contentString6 =\" <div> \"+\"<p>СушиБосс на Черноморск, пр. Мира 18М </p>\"+\"</div>\";\nconst infowindow6 = new google.maps.InfoWindow({content: contentString6,});\nconst contentString7 =\" <div> \"+\"<p>СушиСэт на Белгород, ул. Московская 16 </p>\"+\"</div>\";\nconst infowindow7 = new google.maps.InfoWindow({content: contentString7,});\nconst contentString8 =\" <div> \"+\"<p>СушиБосс на Измаил, пр. Мира, 19Б </p>\"+\"</div>\";\nconst infowindow8 = new google.maps.InfoWindow({content: contentString8,});\nconst contentString9 =\" <div> \"+\"<p>СушиСэт на Варненская 11/1 </p>\"+\"</div>\";\nconst infowindow9 = new google.maps.InfoWindow({content: contentString9,});\nconst contentString10 =\" <div> \"+\"<p>СушиСэт на Филатова 21 </p>\"+\"</div>\";\nconst infowindow10 = new google.maps.InfoWindow({content: contentString10,});\nconst contentString11 =\" <div> \"+\"<p>СушиСэт на Академическая 10 </p>\"+\"</div>\";\nconst infowindow11 = new google.maps.InfoWindow({content: contentString11,});\nconst contentString12 =\" <div> \"+\"<p>СушиСэт на Крымская 71 </p>\"+\"</div>\";\nconst infowindow12 = new google.maps.InfoWindow({content: contentString12,});\nconst contentString13 =\" <div> \"+\"<p>СушиСэт на Королёва 42/44 </p>\"+\"</div>\";\nconst infowindow13 = new google.maps.InfoWindow({content: contentString13,});\nconst contentString14 =\" <div> \"+\"<p>СушиСэт на Преображенская 27 </p>\"+\"</div>\";\nconst infowindow14 = new google.maps.InfoWindow({content: contentString14,});\nconst contentString15 =\" <div> \"+\"<p>СушиСэт на Екатерининская 72 </p>\"+\"</div>\";\nconst infowindow15 = new google.maps.InfoWindow({content: contentString15,});\nconst contentString16 =\" <div> \"+\"<p>СушиБосс на пр.Центральный 71А </p>\"+\"</div>\";\nconst infowindow16 = new google.maps.InfoWindow({content: contentString16,});\nconst contentString17 =\" <div> \"+\"<p>СушиБосс на Педагогическая 58 </p>\"+\"</div>\";\nconst infowindow17 = new google.maps.InfoWindow({content: contentString17,});\n\n\n\n\n\n\n  //SushiBoss\n  const canatnaya = {lat: 46.471714599109525, lng: 30.747179232956377};\n  const vilyam = {lat: 46.390333865851694, lng: 30.718850634008824};\n  const nebesna = {lat: 46.40080837103359, lng: 30.7080217874675};  \n  const mikolaiv = {lat: 46.55427863770318, lng: 30.76261929734942};\n  const torgova = {lat:  46.45329, lng: 30.64197};\n  const chernomorsc = {lat: 46.30420950974765, lng: 30.654399268503138};\n  const moscovscaya = {lat:   46.192973331032796, lng:  30.34043425869424};\n  const mira = {lat: 45.357450023497755, lng: 28.82332925127509};\n  //Markers\n  var iconBase = 'https://maps.google.com/mapfiles/kml/shapes/';\n  var mk1 = new google.maps.Marker({position: canatnaya, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk2 = new google.maps.Marker({position: vilyam, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk3 = new google.maps.Marker({position: nebesna, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk4 = new google.maps.Marker({position: mikolaiv, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk5 = new google.maps.Marker({position: torgova, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk6 = new google.maps.Marker({position: chernomorsc, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk7 = new google.maps.Marker({position: moscovscaya, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk8 = new google.maps.Marker({position: mira, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  //SushiSet\n  const vernenskay = {lat: 46.42601364511811, lng: 30.71744888462948};\n  const filatova = {lat: 46.43533729552938, lng: 30.719486255001996}; \n  const academichna = {lat:  46.441515307445286, lng: 30.74919601358268};\n  const posmitnogo = {lat:  46.42746504921432, lng: 30.75458700482343};\n  const crumskay = {lat: 46.579500842545514, lng: 30.790055339667475};\n  const koroleva = {lat: 46.4058425990526, lng: 30.72111680724049};\n  const probragenskay = {lat: 46.480964375842746, lng: 30.731865604242355};\n  const ekaterininskay = {lat: 46.47277643629396, lng: 30.736577483819794};\n  const centralnay = {lat: 46.966470179505606, lng: 31.98863594420194};\n\n  //Markers\n  var mk9 = new google.maps.Marker({position: vernenskay, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk10 = new google.maps.Marker({position: filatova, map: map}); //no\n  var mk11 = new google.maps.Marker({position: academichna, map: map}); //no\n  var mk12 = new google.maps.Marker({position: crumskay, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk13 = new google.maps.Marker({position: koroleva, map: map}); //no\n  var mk14 = new google.maps.Marker({position: probragenskay, map: map}); //no\n  var mk15 = new google.maps.Marker({position: ekaterininskay, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk16 = new google.maps.Marker({position: centralnay, map: map, icon: iconBase + 'parking_lot_maps.png'});\n  var mk17 = new google.maps.Marker({position: posmitnogo, map: map, icon: iconBase + 'parking_lot_maps.png'});\n   // addListener\n  mk1.addListener(\"click\", () => {infowindow1.open(map, mk1);});\n  mk2.addListener(\"click\", () => {infowindow2.open(map, mk2);});\n  mk3.addListener(\"click\", () => {infowindow3.open(map, mk3);});\n  mk4.addListener(\"click\", () => {infowindow4.open(map, mk4);});\n  mk5.addListener(\"click\", () => {infowindow5.open(map, mk5);});\n  mk6.addListener(\"click\", () => {infowindow6.open(map, mk6);});\n  mk7.addListener(\"click\", () => {infowindow7.open(map, mk7);});\n  mk8.addListener(\"click\", () => {infowindow8.open(map, mk8);});\n  mk9.addListener(\"click\", () => {infowindow9.open(map, mk9);});\n  mk10.addListener(\"click\", () => {infowindow10.open(map, mk10);});\n  mk11.addListener(\"click\", () => {infowindow11.open(map, mk11);});\n  mk12.addListener(\"click\", () => {infowindow12.open(map, mk12);});\n  mk13.addListener(\"click\", () => {infowindow13.open(map, mk13);});\n  mk14.addListener(\"click\", () => {infowindow14.open(map, mk14);});\n  mk15.addListener(\"click\", () => {infowindow15.open(map, mk15);});\n  mk16.addListener(\"click\", () => {infowindow16.open(map, mk16);});\n  mk17.addListener(\"click\", () => {infowindow17.open(map, mk17);});\n const canatnayaCoords = [{ lat: 46.491872, lng: 30.7384629 },{ lat: 46.4876764, lng:  30.7396645 },{ lat: 46.4771564, lng: 30.7388062 },{ lat: 46.4687922, lng: 30.7377977 },{ lat: 46.4683412, lng: 30.7392659 },{ lat: 46.4627694, lng: 30.7389655 },{ lat: 46.4612462, lng: 30.7638846 },{ lat: 46.4791365, lng: 30.7662076 },{ lat: 46.491872, lng: 30.7384629 },];\n const vilyamCoords = [{ lat: 46.3941166, lng: 30.752839  },{ lat: 46.39006, lng: 30.7064931 },{ lat: 46.3894195, lng:  30.6698381 },{ lat: 46.3900772, lng: 30.6584016 },{ lat: 46.3905042, lng:  30.6421782 },{ lat: 46.3504096, lng: 30.6467272 },{ lat: 46.3464989, lng: 30.6645824 },{ lat: 46.3275356, lng: 30.6697323 },{ lat: 46.3270615, lng:  30.6810623 },{ lat: 46.3768264, lng: 30.7476684 },{ lat: 46.3941166, lng: 30.752839 },];\n const nebesnaCoords = [{ lat: 46.4050762, lng: 30.7098564 },{ lat: 46.4073548, lng: 30.7051357 },{ lat: 46.4060823, lng: 30.6898579 },{ lat: 46.3894195, lng: 30.6698381 },{ lat: 46.3902186, lng: 30.7058012 },{ lat: 46.4050762, lng:  30.7098564 },];\n const mikolaivCoords = [{ lat: 46.489548, lng: 30.744374 },{ lat: 46.5112305, lng: 30.7381086 },{ lat: 46.524224, lng: 30.7384519 },{ lat: 46.5372144, lng: 30.7477214 },{ lat: 46.5480767, lng: 30.7611107 },{ lat: 46.5582287, lng: 30.7957855 },{ lat: 46.5557831, lng: 30.8115434 },{ lat: 46.5479061, lng: 30.8200892 },{ lat: 46.5536013, lng: 30.8509502 },{ lat: 46.5638935, lng: 30.8759615 },{ lat: 46.5709737, lng: 30.8153131 },{ lat: 46.5769919, lng: 30.7966463 },{ lat: 46.580503, lng: 30.7887725 },{ lat: 46.585079, lng: 30.7776873 },{ lat: 46.5853926, lng: 30.775249 },{ lat: 46.5851346, lng: 30.7707155 },{ lat: 46.5845151, lng: 30.7689014 },{ lat: 46.5838364, lng: 30.76801 },{ lat: 46.5814028, lng: 30.7660458 },{ lat: 46.573832, lng: 30.7598759 },{ lat: 46.572751, lng: 30.7592855 },{ lat: 46.5719462, lng: 30.759478 },{ lat: 46.573571, lng: 30.6955374 },{ lat: 46.5612975, lng: 30.7051503 },{ lat: 46.5466008, lng: 30.6761411 },{ lat: 46.5334948, lng: 30.6455851 },{ lat: 46.522039, lng: 30.6632658 },{ lat: 46.5285689, lng: 30.7143209 },{ lat: 46.5204113, lng: 30.7122844 },{ lat: 46.5164916, lng: 30.7109736 },{ lat: 46.5129623, lng: 30.7090471 },{ lat: 46.5056517, lng: 30.7095251 },{ lat: 46.5027239, lng: 30.7151065 },{ lat: 46.4990644, lng: 30.7219815 },{ lat: 46.496521, lng: 30.7294846 },{ lat: 46.4925359, lng: 30.7379244 },{ lat: 46.489548, lng:  30.744374 },];     \n const torgovaCoords = [{ lat: 46.3900772, lng: 30.6584016 },{ lat: 46.413167, lng: 30.6531542 },{ lat: 46.4177826, lng: 30.6461161 },{ lat: 46.4345846, lng: 30.6512659 },{ lat: 46.450731, lng: 30.652725 },{ lat: 46.4623203, lng: 30.6518667 },{ lat: 46.4710341, lng: 30.6499902 },{ lat: 46.4753787, lng: 30.6432954 },{ lat: 46.4756152, lng: 30.6420937 },{ lat: 46.5174479, lng: 30.6204644 },{ lat: 46.5242987, lng: 30.6544534 },{ lat: 46.5469713, lng: 30.6166878 },{ lat: 46.4987807, lng: 30.5270806 },{ lat: 46.3922085, lng: 30.5681077 },{ lat: 46.3900772, lng: 30.6584016 },];\n const chernomorscCoords = [{ lat: 46.3125927, lng: 30.6767468 },{ lat: 46.3348794, lng:  30.6546025 },{ lat: 46.338435, lng: 30.6480794 },{ lat: 46.3361832, lng: 30.6341748 },{ lat: 46.3341683, lng: 30.6225019 },{ lat: 46.3283603, lng:  30.6123738 },{ lat: 46.3217219, lng: 30.6032758 },{ lat: 46.3127113, lng: 30.5977826 },{ lat: 46.3047665, lng:  30.5977826 },{ lat: 46.292432, lng: 30.6034474 },{ lat: 46.2817557, lng: 30.6106572 },{ lat: 46.2787897, lng: 30.6264501 },{ lat: 46.279027, lng: 30.6444745 },{ lat: 46.2846029, lng: 30.6549459 },{ lat: 46.2948042, lng: 30.662499 },{ lat: 46.3125927, lng: 30.6767468 },];\n const moscovscayaCoords = [{ lat: 46.2029393, lng: 30.3540336 },{ lat: 46.2048402, lng: 30.3128349 },{ lat: 46.1977115, lng: 30.2915489 },{ lat: 46.1720405, lng: 30.2966987 },{ lat: 46.1518281, lng: 30.3231346 },{ lat: 46.1577737, lng: 30.3787529 },{ lat: 46.1758444, lng: 30.3818428 },{ lat: 46.2029393, lng:  30.3540336 },];\n const miraCoords = [{ lat: 45.3566809, lng: 28.8752144 },{ lat: 45.3682597, lng: 28.8738411 },{ lat: 45.3750129, lng: 28.8710945 },{ lat: 45.3827299, lng: 28.8649147 },{ lat: 45.388758, lng: 28.8511818 },{ lat: 45.3926157, lng: 28.8377922 },{ lat: 45.3940622, lng: 28.8185661 },{ lat: 45.3904458, lng: 28.8017433 },{ lat: 45.3863468, lng: 28.7883537 },{ lat: 45.381283, lng: 28.7804573 },{ lat: 45.3742894, lng:  28.7756508 },{ lat: 45.3665712, lng:  28.7725609 },{ lat: 45.3564396, lng: 28.7701576 },{ lat: 45.3511318, lng: 28.7739342 },{ lat: 45.345341, lng: 28.7814873 },{ lat: 45.3395495, lng:  28.7917869 },{ lat: 45.3383429, lng: 28.8010567 },{ lat: 45.3395495, lng:  28.8106697 },{ lat: 45.332068, lng: 28.8298958 },{ lat: 45.328689, lng: 28.8415687 },{ lat: 45.3262752, lng: 28.854615 },{ lat: 45.3335161, lng: 28.8666313 },{ lat: 45.3434106, lng:  28.874871 },{ lat: 45.3516144, lng: 28.8762443 },{ lat: 45.3566809, lng: 28.8752144 },];\n const vernenskayCoords = [{ lat: 46.4374252, lng: 30.7302856 },{ lat: 46.4379284, lng: 30.7253016 },{ lat: 46.4288483, lng: 30.7120837 },{ lat: 46.4229616, lng: 30.7034577 },{ lat: 46.4233758, lng: 30.7066334 },{ lat: 46.416453, lng: 30.7221688 },{ lat: 46.4189086, lng: 30.7253016 },{ lat: 46.4180506, lng: 30.7265461 },{ lat: 46.4206584, lng: 30.7441728 },{ lat: 46.4240561, lng:  30.7412877 },{ lat: 46.4276059, lng: 30.7383049 },{ lat: 46.4330833, lng:  30.7335344 },{ lat: 46.4369447, lng: 30.7301865 },{ lat: 46.4374252, lng:  30.7302856 },];\n const filatovaCoords = [{ lat: 46.423109, lng: 30.7038284 },{ lat: 46.4379284, lng:  30.7253016 },{ lat: 46.4374252, lng: 30.7302856 },{ lat: 46.4408628, lng: 30.7307414 },{ lat: 46.4425669, lng: 30.7309479 },{ lat: 46.4443005, lng: 30.7310686 },{ lat: 46.4477493, lng: 30.7317862 },{ lat: 46.4512573, lng: 30.7322464 },{ lat: 46.4516121, lng: 30.7284699 },{ lat: 46.4526541, lng: 30.7283973 },{ lat: 46.4538959, lng: 30.7287406 },{ lat: 46.4551377, lng: 30.7289122 },{ lat: 46.4552559, lng: 30.7248353 },{ lat: 46.4542507, lng: 30.7093 },{ lat: 46.4544872, lng: 30.6917906 },{ lat: 46.4577393, lng: 30.6851816 },{ lat: 46.4607548, lng: 30.6841517 },{ lat: 46.4662531, lng: 30.6747961 },{ lat: 46.4697409, lng:  30.6649256 },{ lat: 46.4715143, lng: 30.6657839 },{ lat: 46.4752678, lng: 30.6436826 },{ lat: 46.4706041, lng:  30.6513732 },{ lat: 46.4613291, lng: 30.6531424 },{ lat: 46.4507027, lng: 30.6538536 },{ lat: 46.4506435, lng: 30.6552697 },{ lat: 46.4511166, lng: 30.6727791 },{ lat: 46.4441383, lng:  30.6756973 },{ lat: 46.4415359, lng: 30.6765557 },{ lat: 46.4411811, lng:  30.6878853 },{ lat: 46.4411219, lng:  30.6934214 },{ lat: 46.4347338, lng: 30.6966829 },{ lat: 46.4303563, lng: 30.690589 },{ lat: 46.423109, lng: 30.7038284 },];\n const academichnaCoords = [{ lat: 46.4612462, lng: 30.7638846 },{ lat: 46.4614593, lng: 30.761627 },{ lat: 46.4617083, lng: 30.7556528 },{ lat: 46.4620288, lng:  30.7500563 },{ lat: 46.4621378, lng: 30.7468456 },{ lat: 46.462799, lng: 30.7384934 },{ lat: 46.4599979, lng: 30.7379032 },{ lat: 46.4603859, lng: 30.7310958 },{ lat: 46.4594574, lng:  30.7301207 },{ lat: 46.458529, lng: 30.7293603 },{ lat: 46.4561398, lng: 30.729127 },{ lat: 46.4541515, lng: 30.7287086 },{ lat: 46.4516121, lng: 30.7284699 },{ lat: 46.4512573, lng: 30.7322464 },{ lat: 46.4369447, lng: 30.7301865 },{ lat: 46.4290622, lng: 30.7370397 },{ lat: 46.4315137, lng: 30.7412749 },{ lat: 46.4345869, lng: 30.7474737 },{ lat: 46.4362913, lng: 30.7616695 },{ lat: 46.4361171, lng: 30.7640732 },{ lat: 46.4361167, lng: 30.7673406 },{ lat: 46.4412034, lng: 30.7719004 },{ lat: 46.4469994, lng: 30.7715571 },{ lat: 46.4512573, lng: 30.7694971 },{ lat: 46.4556331, lng: 30.7679522 },{ lat: 46.4596539, lng: 30.7650339 },{ lat: 46.4612462, lng: 30.7638846 },];\n const crumskayCoords = [{ lat: 46.6064447, lng: 30.7746494 },{ lat: 46.5816401, lng: 30.7607897 },{ lat: 46.5767826, lng: 30.7596513 },{ lat: 46.5720061, lng: 30.7578692 },{ lat: 46.5719462, lng: 30.759478 },{ lat: 46.572751, lng: 30.7592855 },{ lat: 46.573832, lng: 30.7598759 },{ lat: 46.5814028, lng: 30.7660458 },{ lat: 46.5838364, lng: 30.76801 },{ lat: 46.5845151, lng: 30.7689014 },{ lat: 46.5851346, lng: 30.7707155 },{ lat: 46.5853926, lng: 30.775249 },{ lat: 46.585079, lng: 30.7776873 },{ lat: 46.5769919, lng: 30.7966463 },{ lat: 46.5709737, lng: 30.8153131 },{ lat: 46.5638935, lng: 30.8759615 },{ lat: 46.5660097, lng: 30.8829387 },{ lat: 46.5708483, lng: 30.8746989 },{ lat: 46.5757297, lng: 30.8075605 },{ lat: 46.5818653, lng: 30.8119379 },{ lat: 46.5850509, lng: 30.8026682 },{ lat: 46.5908315, lng: 30.8188043 },{ lat: 46.595432, lng: 30.8159719 },{ lat: 46.5999142, lng: 30.8103929 },{ lat: 46.6064447, lng: 30.7746494 },];\n const korolevaCoords = [{ lat: 46.419623, lng: 30.7150761},{ lat: 46.4135864, lng: 30.6949696},{ lat: 46.4058041, lng: 30.7103118},{ lat: 46.39006, lng: 30.7064931},{ lat: 46.3941166, lng: 30.752839},{ lat: 46.4044021, lng: 30.7583391},{ lat: 46.4201555, lng: 30.7447736},{ lat: 46.4180506, lng: 30.7265461},{ lat: 46.4189086, lng: 30.7253016},{ lat: 46.416453, lng: 30.7221688},{ lat: 46.419623, lng: 30.7150761},];\n const probragenskayCoords = [{ lat: 46.4767943, lng:  30.7384075 },{ lat: 46.4835235, lng: 30.7388039 },{ lat: 46.4871582, lng: 30.7391579 },{ lat: 46.4895368, lng: 30.7375326 },{ lat: 46.4914648, lng: 30.7373208 },{ lat: 46.4925359, lng: 30.7379244 },{ lat: 46.4967607, lng: 30.7288692 },{ lat: 46.4981489, lng: 30.724653 },{ lat: 46.4986066, lng: 30.7234031 },{ lat: 46.4990644, lng: 30.7219815 },{ lat: 46.5056517, lng: 30.7095251 },{ lat: 46.5129623, lng: 30.7090471 },{ lat: 46.5164916, lng: 30.7109736 },{ lat: 46.5285689, lng: 30.7143209 },{ lat: 46.522039, lng: 30.6632658 },{ lat: 46.5242987, lng: 30.6544534 },{ lat: 46.5174479, lng: 30.6204644 },{ lat: 46.5029224, lng: 30.6279529 },{ lat: 46.4959506, lng: 30.6316007 },{ lat: 46.4934984, lng: 30.6328025 },{ lat: 46.491903, lng: 30.6384243 },{ lat: 46.491608, lng:  30.6433137 },{ lat: 46.4905278, lng: 30.6598806 },{ lat: 46.4856001, lng: 30.6628313 },{ lat: 46.4830734, lng: 30.670793 },{ lat: 46.4810941, lng: 30.6801928 },{ lat: 46.4755307, lng: 30.6948803 },{ lat: 46.4773557, lng: 30.7079381 },{ lat: 46.4773648, lng: 30.7239978 },{ lat: 46.477341, lng: 30.73182 },{ lat: 46.4767943, lng:  30.7384075 },];\n const ekaterininskayCoords = [{ lat: 46.4934984, lng: 30.6328025 },{ lat: 46.4756152, lng: 30.6420937 },{ lat: 46.4733937, lng: 30.6542407 },{ lat: 46.4724664, lng: 30.6601471 },{ lat: 46.4715143, lng: 30.6657839 },{ lat: 46.4697409, lng: 30.6649256 },{ lat: 46.4662531, lng: 30.6747961 },{ lat: 46.4607548, lng: 30.6841517 },{ lat: 46.4590391, lng: 30.6845982 },{ lat: 46.4577393, lng: 30.6851816 },{ lat: 46.4544872, lng: 30.6917906 },{ lat: 46.4542507, lng: 30.7093 },{ lat: 46.4552559, lng: 30.7248353 },{ lat: 46.4551377, lng: 30.7289122 },{ lat: 46.4561398, lng: 30.729127 },{ lat: 46.458529, lng: 30.7293603 },{ lat: 46.4603859, lng: 30.7310958 },{ lat: 46.4599979, lng:  30.7379032 },{ lat: 46.4649568, lng: 30.7390084 },{ lat: 46.4683412, lng: 30.7392659 },{ lat: 46.4687913, lng: 30.737537 },{ lat: 46.4701133, lng:  30.7376535 },{ lat: 46.4720479, lng: 30.7380582 },{ lat: 46.4746152, lng: 30.7382892 },{ lat: 46.4767943, lng: 30.7384075 },{ lat: 46.477341, lng: 30.73182 },{ lat: 46.4773557, lng:  30.7079381 },{ lat: 46.4755307, lng: 30.6948803 },{ lat: 46.4810941, lng: 30.6801928 },{ lat: 46.4830734, lng: 30.670793 },{ lat: 46.4856001, lng:  30.6628313 },{ lat: 46.4905278, lng:  30.6598806 },{ lat: 46.491903, lng: 30.6384243 },{ lat: 46.4934984, lng: 30.6328025 },];\n const centralnayCoords = [{ lat: 46.9556998, lng: 31.9688887 },{ lat: 46.9495999, lng: 32.0128358 },{ lat: 46.9336606, lng: 32.025882 },{ lat: 46.9458499, lng: 32.047168 },{ lat: 46.9706887, lng: 32.0574677 },{ lat: 46.9870854, lng: 32.0403016 },{ lat: 46.9987942, lng: 32.0087159 },{ lat: 46.9866237, lng: 31.9786734 },{ lat: 46.9811196, lng: 31.9656271 },{ lat: 46.9504269, lng: 31.9304365 },{ lat: 46.9432784, lng: 31.9359297},{ lat: 46.9556998, lng: 31.9688887 },];\n const posmitnogoCoords = [{ lat: 46.4345869, lng: 30.7474737 },{ lat: 46.4315137, lng: 30.7412749 },{ lat: 46.4290622, lng: 30.7370397 },{ lat: 46.4044021, lng: 30.7583391 },{ lat: 46.4236911, lng: 30.7690613 },{ lat: 46.4363518, lng: 30.7723209 },{ lat: 46.4361167, lng: 30.7673406 },{ lat: 46.4361171, lng: 30.7640732 },{ lat: 46.4362913, lng: 30.7616695 },{ lat: 46.4345869, lng: 30.7474737 },];\n  // Construct the polygon.\n   const canatnayaPolygon = new google.maps.Polygon({paths: canatnayaCoords,strokeColor: \"#5cde1d\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#5cde1d\",fillOpacity: 0.35,});\n   const vilyamPolygon = new google.maps.Polygon({paths: vilyamCoords,strokeColor: \"#000000\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#000000\",fillOpacity: 0.35,});\n   const nebesnaPolygon = new google.maps.Polygon({paths: nebesnaCoords,strokeColor: \"#14ad92\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#14ad92\",fillOpacity: 0.35,});\n   const mikolaivPolygon = new google.maps.Polygon({paths: mikolaivCoords,strokeColor: \"#ffe306\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#ffe306\",fillOpacity: 0.35,});\n   const torgovaPolygon = new google.maps.Polygon({paths: torgovaCoords,strokeColor: \"#5d1010\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#5d1010\",fillOpacity: 0.35,});\n   const chernomorscPolygon = new google.maps.Polygon({paths: chernomorscCoords,strokeColor: \"#657511\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#657511\",fillOpacity: 0.35,});\n   const moscovscayaPolygon = new google.maps.Polygon({paths: moscovscayaCoords,strokeColor: \"#0f3763\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#0f3763\",fillOpacity: 0.35,});\n   const miraPolygon = new google.maps.Polygon({paths: miraCoords,strokeColor: \"#0ce7e8\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#0ce7e8\",fillOpacity: 0.35,});\n   const vernenskayPolygon = new google.maps.Polygon({paths: vernenskayCoords,strokeColor: \"#d86e11\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#d86e11\",fillOpacity: 0.35,});\n   const filatovaPolygon = new google.maps.Polygon({paths: filatovaCoords,strokeColor: \"#065818\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#0658\",fillOpacity: 0.35,});\n   const academichnaPolygon = new google.maps.Polygon({paths: academichnaCoords,strokeColor: \"#FF0000\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#FF0000\",fillOpacity: 0.35,});\n   const crumskayPolygon = new google.maps.Polygon({paths: crumskayCoords,strokeColor: \"#47109c\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#47109c\",fillOpacity: 0.35,});\n   const korolevaPolygon = new google.maps.Polygon({paths: korolevaCoords,strokeColor: \"#10339c\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#10339c\",fillOpacity: 0.35,});\n   const probragenskayPolygon = new google.maps.Polygon({paths: probragenskayCoords,strokeColor: \"#1a92ff\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#1a92ff\",fillOpacity: 0.35,});\n   const ekaterininskayPolygon = new google.maps.Polygon({paths: ekaterininskayCoords,strokeColor: \"#ff1a81\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#ff1a81\",fillOpacity: 0.35,});\n   const centralnayPolygon = new google.maps.Polygon({paths: centralnayCoords,strokeColor: \"#0f2863\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#0f2863\",fillOpacity: 0.35,});\n   const posmitnogoPolygon = new google.maps.Polygon({paths: posmitnogoCoords,strokeColor: \"#0000008c\",strokeOpacity: 0.8,strokeWeight: 2,fillColor: \"#0000008c\",fillOpacity: 0.35,});\n   //Setmap\n   canatnayaPolygon.setMap(map);\n   vilyamPolygon.setMap(map);\n   nebesnaPolygon.setMap(map);\n   mikolaivPolygon.setMap(map);\n   torgovaPolygon.setMap(map);\n   chernomorscPolygon.setMap(map);\n   moscovscayaPolygon.setMap(map);\n   miraPolygon.setMap(map);\n   vernenskayPolygon.setMap(map);\n   filatovaPolygon.setMap(map);\n   academichnaPolygon.setMap(map);\n   crumskayPolygon.setMap(map);\n   korolevaPolygon.setMap(map);\n   probragenskayPolygon.setMap(map);\n   ekaterininskayPolygon.setMap(map);\n   centralnayPolygon.setMap(map);\n   posmitnogoPolygon.setMap(map);\n// Create the search box and link it to the UI element.\n        const input = document.getElementById(\"pac-input\");\n        const searchBox = new google.maps.places.SearchBox(input);\n        // Bias the SearchBox results towards current map's viewport.\n        map.addListener(\"bounds_changed\", () => {\n          searchBox.setBounds(map.getBounds());\n        });\n        let markers = [];\n        // Listen for the event fired when the user selects a prediction and retrieve\n        // more details for that place.\n        var markerLatLng;\n        var maLat;\n        searchBox.addListener(\"places_changed\", () => {\n          const places = searchBox.getPlaces();\n          if (places.length == 0) {\n             return;\n          }\n          // Clear out the old markers.\n          markers.forEach((marker) => {\n            marker.setMap(null);\n          });\n          markers = [];\n          // For each place, get the icon, name and location.\n          const bounds = new google.maps.LatLngBounds();\n          places.forEach((place) => {\n            if (!place.geometry || !place.geometry.location) {\n              console.log(\"Returned place contains no geometry\");\n              return;\n            }\n                  maLat = place.geometry.location.lat();\n                  maLng = place.geometry.location.lng();\n                  markerLatLng = { lat: place.geometry.location.lat(), lng: place.geometry.location.lng() };\n            const icon = {\n              url: place.icon,\n              size: new google.maps.Size(71, 71),\n              origin: new google.maps.Point(0, 0),\n              anchor: new google.maps.Point(17, 34),\n              scaledSize: new google.maps.Size(25, 25),\n            };\n            // Create a marker for each place.\n            markers.push(\n              new google.maps.Marker({\n                map,\n                icon,\n                title: place.name,\n                position: place.geometry.location,\n                \n              })\n            );\n            // console.log(\"marker \"+markers.length+\" name=\"+place.name+\" coordinates=\"+place.geometry.location.toUrlValue(6)+\", latitude=\"+place.geometry.location.lat()+\", longitude=\"+place.geometry.location.lng());      \n            // console.log(markerLatLng);\n            // console.log(place.geometry.location.lat(),place.geometry.location.lng());\n            if (place.geometry.viewport) {\n              // Only geocodes have viewport.\n              bounds.union(place.geometry.viewport);\n            } else {\n              bounds.extend(place.geometry.location);\n            }\n          });\n          map.fitBounds(bounds);\n        }); //addlistener\n  let directionsService = new google.maps.DirectionsService();\n  let directionsRenderer = new google.maps.DirectionsRenderer();\n  directionsRenderer.setMap(map); // Existing map object displays directions\n  // Create route from existing points used for markers\n  document.getElementById(\"addRoute\").addEventListener(\"click\", function() {\n console.log(markerLatLng);\n    //Shop location\n       shopLatLng =  document.getElementById(\"comboA\").value;\n      var jsonStr = shopLatLng.replace(/(\\w+:)|(\\w+ :)/g, function(matchedStr) {\n      return '\"' + matchedStr.substring(0, matchedStr.length - 1) + '\":';\n    });\n     shopLatLng = JSON.parse(jsonStr); //converts to a regular object\n      console.log(shopLatLng.lat);\n\n      const route = {\n      origin: shopLatLng,\n      destination: markerLatLng,\n      travelMode: 'DRIVING'\n      }\n      var R = 3958.8; // Radius of the Earth in miles\n      var rlat1 = shopLatLng.lat * (Math.PI/180); // Convert degrees to radians\n      var rlat2 = maLat * (Math.PI/180); // Convert degrees to radians\n      var difflat = rlat2-rlat1; // Radian difference (latitudes)\n      var difflon = (maLng - shopLatLng.lng) * (Math.PI/180); // Radian difference (longitudes)\n  \n       var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat/2)*Math.sin(difflat/2)+Math.cos(rlat1)*Math.cos(rlat2)*Math.sin(difflon/2)*Math.sin(difflon/2)));\n\n      line = new google.maps.Polyline(\n       {path: [shopLatLng, markerLatLng],\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 1.0,\n      strokeWeight: 2,\n      });\n      console.log(shopLatLng.lat,shopLatLng.lng);\n       distance = d;\n\n  directionsService.route(route,\n    function(response, status) { // anonymous function to capture directions\n      if (status !== 'OK') {\n        window.alert('Directions request failed due to ' + status);\n        return;\n      } else {\n        directionsRenderer.setDirections(response); // Add route to the map\n        var directionsData = response.routes[0].legs[0]; // Get data about the mapped route\n        if (!directionsData) {\n          window.alert('Directions request failed');\n          return;\n        }\n        else {\n             // var numEl = parseInt(directionsData.distance.text.match(/\\d+/) * 1);\n              numEl = directionsData.distance.text;\n           document.getElementById(\"km\").innerHTML= 0 + \" км\";\n           document.getElementById(\"km\").innerHTML= numEl;\n        }\n      }\n    });\n  });\ndocument.getElementById('addLine').addEventListener('click', addLine);\nfunction addLine(){\n  line.setMap(map);\n     console.log(\"AddLine\");\n     let km = distance * 1.609344;\n    document.getElementById(\"line_km\").innerHTML= km.toFixed(2) + \" км\"; \n}\ndocument.getElementById('removeLine').addEventListener('click', removeLine);\nfunction removeLine(){\n  line.setMap(null);\n    document.getElementById(\"line_km\").innerHTML= 0 + \" км\";\n     console.log(\"RemoveLine\");\n}\ndocument.getElementById('addDelivery').addEventListener('click', addDelivery);\nfunction addDelivery(){\n    let price = document.getElementById(\"input_price\").value;\n    numEl = numEl.replace(/[^0-9$.,]/g, '');\n    numEl = numEl.replace(/,/g, '.')\n    var num = parseFloat(numEl);\n    var priceInt = parseInt(price)\n    console.log(\"Цена \"+ priceInt);\n    console.log(\"Км \"+ num);\n\n//Условия доставки\n      switch (true) {\n        case (num <= 4):\n          switch(true){\n            case(priceInt >= 150):\n            document.getElementById(\"line_delivery\").innerHTML=\"бесплатно\";\n            console.log(\"Бесплатно меньше 4 больше 150\");\n            break;\n            case(priceInt < 150):\n            document.getElementById(\"line_delivery\").innerHTML=\"Бесплатная доставка от 150 грн или 30 грн\";\n            console.log(\"30 грн меньше 4 меньше 150\");\n          }\n          break;\n        case (num > 4 && num <= 6):\n          switch(true){\n            case(priceInt >= 300):\n            document.getElementById(\"line_delivery\").innerHTML=\"бесплатно\";\n            console.log(\"Бесплатно 4-6 больше 300\");\n            break;\n            case(priceInt > 0 && priceInt < 300):\n            document.getElementById(\"line_delivery\").innerHTML=\"Бесплатная доставка от 300 грн или 40 грн\";\n            console.log(\"40 грн  4-6 меньше 300\");\n          }\n          break;\n        case (num > 6 && num <= 8):\n          switch(true){\n            case(priceInt >= 399):\n            document.getElementById(\"line_delivery\").innerHTML=\"бесплатно\";\n            console.log(\"Бесплатно 6-8 больше 399\");\n            break;\n            case(priceInt > 0 && priceInt < 399):\n            document.getElementById(\"line_delivery\").innerHTML=\"Бесплатная доставка от 399 грн или 50 грн\";\n            console.log(\"50 грн  6-8 меньше 399\");\n          }\n          break;\n        case (num > 8 && num <= 10):\n          switch(true){\n            case(priceInt >= 450):\n            document.getElementById(\"line_delivery\").innerHTML=\"бесплатно\";\n            console.log(\"Бесплатно 8-10 больше 450\");\n            break;\n            case(priceInt > 0 && priceInt < 450):\n            document.getElementById(\"line_delivery\").innerHTML=\"Бесплатная доставка от 450 грн или 50 грн\";\n            console.log(\"60 грн  8-10 меньше 450\");\n          }\n          break;  \n        case (num > 10 && num <= 18):\n          switch(true){\n            case(priceInt >= 499):\n            document.getElementById(\"line_delivery\").innerHTML=\"бесплатно\";\n            console.log(\"100 грн\");\n            break;\n            case(priceInt > 0 && priceInt < 499):\n            document.getElementById(\"line_delivery\").innerHTML=\"Бесплатная доставка от 499 грн или 100 грн\";\n            console.log(\"Минимальная сумма заказа 499 грн\");\n          }\n          break;\n        case (num > 18 && num <= 200):\n          switch(true){\n            case(priceInt >= 1000):\n            document.getElementById(\"line_delivery\").innerHTML=\"100 грн\";\n            console.log(\"100 грн\");\n            break;\n            case(priceInt > 0 && priceInt < 1000):\n            document.getElementById(\"line_delivery\").innerHTML=\"Мин. сумма заказа 1000 грн + 100 грн\";\n            console.log(\"Минимальная сумма заказа 1000 грн\");\n          }\n          break;    \n        default:\n        document.getElementById(\"line_delivery\").innerHTML=\"Доставка не возможна\";\n        console.log(\"Доставка не возможна\");\n    }\n  }\n}\nexport { initMap };\n//Определение местоположения пользователя \n//  button.addEventListener(\"click\", function() {\n//   navigator.geolocation.getCurrentPosition(function(position) {\n//     //User location\n//       let mylat = position.coords.latitude;\n//       let mylong = position.coords.longitude;\n//       var myLatLng = { lat: mylat, lng: mylong };\n//     //Shop location\n//       let shopLatLng =  document.getElementById(\"comboA\").value;\n//       var jsonStr = shopLatLng.replace(/(\\w+:)|(\\w+ :)/g, function(matchedStr) {\n//       return '\"' + matchedStr.substring(0, matchedStr.length - 1) + '\":';\n//     });\n\n//      shopLatLng = JSON.parse(jsonStr); //converts to a regular object\n\n//       console.log(typeof shopLatLng); // expected output: John\n  \n//       const route = {\n//       origin: myLatLng,\n//       destination: shopLatLng,\n//       travelMode: 'DRIVING'\n//   }\n\n\n\n\n\n \n\n\n"]},"metadata":{},"sourceType":"module"}