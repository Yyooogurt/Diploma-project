{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { fetchPizzas } from './asyncActions';\nimport { Status } from './types';\nconst initialState = {\n  items: [],\n  status: Status.LOADING // loading | success | error\n\n};\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action) {\n      state.items = action.payload;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  }\n});\nexport const {\n  setItems\n} = pizzaSlice.actions;\nexport default pizzaSlice.reducer;","map":{"version":3,"sources":["/Users/mac/Desktop/Pizza 2/react-pizza-v2/src/redux/pizza/slice.ts"],"names":["createSlice","fetchPizzas","Status","initialState","items","status","LOADING","pizzaSlice","name","reducers","setItems","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","SUCCESS","rejected","ERROR","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAAiCC,MAAjC,QAA+C,SAA/C;AAEA,MAAMC,YAA6B,GAAG;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,MAAM,EAAEH,MAAM,CAACI,OAFqB,CAEZ;;AAFY,CAAtC;AAKA,MAAMC,UAAU,GAAGP,WAAW,CAAC;AAC7BQ,EAAAA,IAAI,EAAE,OADuB;AAE7BL,EAAAA,YAF6B;AAG7BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAwC;AAC9CD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACD;;AAHO,GAHmB;AAQ7BC,EAAAA,aAAa,EAAGC,OAAD,IAAa;AAC1BA,IAAAA,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACgB,OAA5B,EAAqC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACI,OAAtB;AACAK,MAAAA,KAAK,CAACP,KAAN,GAAc,EAAd;AACD,KAHD;AAKAW,IAAAA,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACiB,SAA5B,EAAuC,CAACP,KAAD,EAAQC,MAAR,KAAmB;AACxDD,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACAF,MAAAA,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACiB,OAAtB;AACD,KAHD;AAKAJ,IAAAA,OAAO,CAACC,OAAR,CAAgBf,WAAW,CAACmB,QAA5B,EAAsC,CAACT,KAAD,EAAQC,MAAR,KAAmB;AACvDD,MAAAA,KAAK,CAACN,MAAN,GAAeH,MAAM,CAACmB,KAAtB;AACAV,MAAAA,KAAK,CAACP,KAAN,GAAc,EAAd;AACD,KAHD;AAID;AAvB4B,CAAD,CAA9B;AA0BA,OAAO,MAAM;AAAEM,EAAAA;AAAF,IAAeH,UAAU,CAACe,OAAhC;AAEP,eAAef,UAAU,CAACgB,OAA1B","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchPizzas } from './asyncActions';\nimport { Pizza, PizzaSliceState, Status } from './types';\n\nconst initialState: PizzaSliceState = {\n  items: [],\n  status: Status.LOADING, // loading | success | error\n};\n\nconst pizzaSlice = createSlice({\n  name: 'pizza',\n  initialState,\n  reducers: {\n    setItems(state, action: PayloadAction<Pizza[]>) {\n      state.items = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchPizzas.pending, (state, action) => {\n      state.status = Status.LOADING;\n      state.items = [];\n    });\n\n    builder.addCase(fetchPizzas.fulfilled, (state, action) => {\n      state.items = action.payload;\n      state.status = Status.SUCCESS;\n    });\n\n    builder.addCase(fetchPizzas.rejected, (state, action) => {\n      state.status = Status.ERROR;\n      state.items = [];\n    });\n  },\n});\n\nexport const { setItems } = pizzaSlice.actions;\n\nexport default pizzaSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}